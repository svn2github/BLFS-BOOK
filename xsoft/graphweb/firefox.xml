<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
   "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
  <!ENTITY % general-entities SYSTEM "../../general.ent">
  %general-entities;

  <!ENTITY firefox-download-http
           "&mozilla-http;/firefox/releases/&firefox-version;/source/firefox-&firefox-version;.source.tar.bz2">
  <!ENTITY firefox-download-ftp
           "&mozilla-ftp;/firefox/releases/&firefox-version;/source/firefox-&firefox-version;.source.tar.bz2">
  <!ENTITY firefox-md5sum        "60466afbc7105d29dcd18f996c9c67e0">
  <!ENTITY firefox-size          "172 MB">
  <!ENTITY firefox-buildsize     "3.6 GB (73 MB installed)">
  <!ENTITY firefox-time          "7.9 SBU (using parallelism=4)">
]>

<sect1 id="firefox" xreflabel="Firefox-&firefox-version;">
  <?dbhtml filename="firefox.html" ?>

  <sect1info>
    <othername>$LastChangedBy$</othername>
    <date>$Date$</date>
  </sect1info>

  <title>Firefox-&firefox-version;</title>

  <indexterm zone="firefox">
    <primary sortas="a-Firefox">Firefox</primary>
  </indexterm>

  <sect2 role="package">
    <title>Introduction to Firefox</title>

    <para>
      <application>Firefox</application> is a stand-alone browser based on the
      <application>Mozilla</application> codebase.
    </para>

    &lfs77_checked; &gcc5_checked;

    <bridgehead renderas="sect3">Package Information</bridgehead>
    <itemizedlist spacing="compact">
      <listitem>
        <para>
          Download (HTTP): <ulink url="&firefox-download-http;"/>
        </para>
      </listitem>
      <listitem>
        <para>
          Download (FTP): <ulink url="&firefox-download-ftp;"/>
        </para>
      </listitem>
      <listitem>
        <para>
          Download MD5 sum: &firefox-md5sum;
        </para>
      </listitem>
      <listitem>
        <para>
          Download size: &firefox-size;
        </para>
      </listitem>
      <listitem>
        <para>
          Estimated disk space required: &firefox-buildsize;
        </para>
      </listitem>
      <listitem>
        <para>
          Estimated build time: &firefox-time;
        </para>
      </listitem>
    </itemizedlist>

    <bridgehead renderas="sect3">Firefox Dependencies</bridgehead>

    <bridgehead renderas="sect4">Required</bridgehead>
    <para role="required">
      <xref linkend="alsa-lib"/>,
      <xref linkend="gtk2"/>,
      <xref linkend="zip"/>, 
      <xref linkend="unzip"/>, and
      <xref linkend="yasm"/>
    </para>

    <bridgehead renderas="sect4">Recommended</bridgehead>
    <para role="recommended">
      <xref linkend="icu"/>,
      <xref linkend="libevent"/>,
      <xref linkend="libvpx"/>,
      <xref linkend="nspr"/>,
      <xref linkend="nss"/>, and
      <xref linkend="sqlite"/>
    </para>

    <note>
      <para>
        If you don't install recommended dependencies, then internal copies of
        those packages will be used. They might be tested to work, but they can
        be out of date or contain security holes.
      </para>
    </note>

    <note>
      <para>
        With <application>Firefox-31.0</application> and later versions, you
        must have installed <application>Openssl</application> before
        <application>Python 2</application> or the build system will quickly
        fail with output including "ImportError: cannot import name
        HTTPSHandler". If you are in any doubt about this (e.g. upgrading from
        an older version of Firefox), check if
        <filename>/usr/lib/python&python2-majorver;/lib-dynload/_ssl.so</filename>
        exists.  If it does not, reinstall <xref linkend="python2"/> (after
        installing <xref linkend="openssl"/>.  The latest version of any
        <emphasis>currently maintained</emphasis> version of Openssl should be
        satisfactory if already installed. 
      </para>
    </note>

    <bridgehead renderas="sect4">Optional</bridgehead>
    <para role="optional">
      <xref linkend="curl"/>,
      <xref linkend="dbus-glib"/>,
      <xref linkend="doxygen"/>,
      <xref linkend="gst-plugins-base"/> (with
      <xref linkend="gst-plugins-good"/> and
      <xref linkend="gst-ffmpeg"/> at runtime), or
      <xref linkend="gst10-plugins-base"/> (with
      <xref linkend="gst10-plugins-good"/> and
      <xref linkend="gst10-libav"/> at runtime),
      <xref linkend="libnotify"/>,
      <ulink url="https://code.google.com/p/libproxy/">libproxy</ulink>,
      <xref linkend="openjdk"/>,
      <xref linkend="pulseaudio"/>,
      <xref linkend="startup-notification"/>,
      <xref linkend="valgrind"/>,
      <xref linkend="wget"/>,
      <xref linkend="wireless_tools"/>,
      <ulink url="http://hunspell.sourceforge.net/">Hunspell</ulink>, and
      <ulink url="http://sourceforge.net/projects/liboauth/files/">liboauth</ulink>
    </para>

    <para condition="html" role="usernotes">
      User Notes: <ulink url="&blfs-wiki;/firefox"/>
    </para>
  </sect2>

  <sect2 role="installation">
    <title>Installation of Firefox</title>

    <para>
      The configuration of <application>Firefox</application> is accomplished
      by creating a <filename>mozconfig</filename> file containing the desired
      configuration options. A default <filename>mozconfig</filename> is
      created below. To see the entire list of available configuration options
      (and an abbreviated description of each one), issue <command>./configure
      --help</command>. You may also wish to review the entire file and
      uncomment any other desired options.  Create the file by issuing the
      following command:
    </para>

<screen><userinput>cat &gt; mozconfig &lt;&lt; "EOF"
<literal># If you have a multicore machine, all cores will be used by default.
# If desired, you can reduce the number of cores used, e.g. to 1, by
# uncommenting the next line and setting a valid number of CPU cores.
#mk_add_options MOZ_MAKE_FLAGS="-j1"

# If you have installed DBus-Glib comment out this line:
ac_add_options --disable-dbus

# If you have installed dbus-glib, and you have installed (or will install)
# wireless-tools, and you wish to use geolocation web services, comment out
# this line
ac_add_options --disable-necko-wifi

# If you have installed libnotify comment out this line:
ac_add_options --disable-libnotify

# GStreamer is necessary for H.264 video playback in HTML5 Video Player;
# to be enabled, also remember to set "media.gstreamer.enabled" to "true"
# in about:config. If you have GStreamer 0.x.y, comment out this line:
ac_add_options --disable-gstreamer
# or uncomment this line, if you have GStreamer 1.x.y
#ac_add_options --enable-gstreamer=1.0

# Uncomment these lines if you have installed optional dependencies:
#ac_add_options --enable-system-hunspell
#ac_add_options --enable-startup-notification

# Comment out following option if you have PulseAudio installed
ac_add_options --disable-pulseaudio
<!-- Does not work uncommented
# If you have not installed Yasm then uncomment this line:
#ac_add_options - -disable-webm
-->
# Comment out following options if you have not installed
# recommended dependencies:
ac_add_options --enable-system-sqlite
ac_add_options --with-system-libevent
ac_add_options --with-system-libvpx
ac_add_options --with-system-nspr
ac_add_options --with-system-nss
ac_add_options --with-system-icu

# The BLFS editors recommend not changing anything below this line:
ac_add_options --prefix=/usr
ac_add_options --enable-application=browser

ac_add_options --disable-crashreporter
ac_add_options --disable-updater
ac_add_options --disable-tests

ac_add_options --enable-optimize
ac_add_options --enable-strip
ac_add_options --enable-install-strip

ac_add_options --enable-gio
ac_add_options --enable-official-branding
ac_add_options --enable-safe-browsing
ac_add_options --enable-url-classifier

ac_add_options --enable-system-cairo
ac_add_options --enable-system-ffi
ac_add_options --enable-system-pixman

ac_add_options --with-pthreads

ac_add_options --with-system-bz2
ac_add_options --with-system-jpeg
ac_add_options --with-system-png
ac_add_options --with-system-zlib

mk_add_options MOZ_OBJDIR=@TOPSRCDIR@/firefox-build-dir</literal>
EOF</userinput></screen>

    <!-- this problem seems to have gone with 36.0
    <note><para>
      There is a problem on i686 systems when building
      <application>Firefox</application> with <application>gcc</application>
      versions ranging from 4.8 to 4.9.1 and using the switch
      <quote>\-\-enable-optimize</quote>. There are two alternatives. The best
      one is to upgrade <application>gcc</application> to version 4.9.2 or later
      because it will give better perfomance and smaller binaries.  However, if
      you do not wish to upgrade gcc, reduce the level of optimization with:
    </para>

<screen><userinput>test $(uname -m) = "i686" &amp;&amp; sed -i 's/enable-optimize/&amp;=-O2/' mozconfig || true</userinput></screen>
    </note>-->

    <para>
      Compile <application>Firefox</application> by issuing the following
      commands:
    </para>

    <note><para>
      If you are compiling <application>Firefox</application> in chroot, make
      sure you have <envar>$SHELL</envar> environment variable set or prepend
      <envar>SHELL=/bin/sh</envar>.
    </para></note>

<screen><userinput>make -f client.mk</userinput></screen>

    <para>
      This package does not come with a test suite.
    </para>

    <para>
      Now, as the <systemitem class="username">root</systemitem> user:
    </para>

<screen role="root"><userinput>make -f client.mk install INSTALL_SDK= &amp;&amp;

chown -R 0:0 /usr/lib/firefox-&firefox-version;  &amp;&amp;
mkdir -pv /usr/lib/mozilla/plugins  &amp;&amp;
ln -sfv ../../mozilla/plugins /usr/lib/firefox-&firefox-version;/browser</userinput></screen>

  </sect2>

  <sect2 role="commands">
    <title>Command Explanations</title>

    <para>
      <command>make -f client.mk ...</command>: Mozilla products are packaged to
      allow the use of a configuration file which can be used to pass the
      configuration settings to the <command>configure</command> command.
      <command>make</command> uses the <filename>client.mk</filename> file to
      get initial configuration and setup parameters.
    </para>

     <para>
      <command>make -C firefox-build-dir install</command>: This runs
      <command>make install</command> in firefox-build-dir.
    </para>

    <para>
      <command>ln -sfv ... /usr/bin/firefox</command>: This puts a symbolic link
      to the <command>firefox</command> executable in your <envar>PATH</envar>
      variable.
    </para>

    <para>
      <command>mkdir -p /usr/lib/mozilla/plugins</command>: This checks
      that <filename class="directory">/usr/lib/mozilla/plugins</filename>
      exists.
    </para>

    <para>
      <command>ln -sv ... /usr/lib/firefox-&firefox-version;/browser</command>:
      This command creates a symbolic link to <filename
      class="directory">/usr/lib/mozilla/plugins</filename>. It's not really
      needed, as <application>Firefox</application> checks <filename
      class="directory">/usr/lib/mozilla/plugins</filename> by default, but the
      symbolic link is made to keep all the plugins installed in one folder.
    </para>

  </sect2>

  <sect2 role="configuration">
    <title>Configuring Firefox</title>

    <para>
      If you did not add the <option>--disable-webm</option> option to your
      <filename>mozconfig</filename>, your <application>Firefox</application>
      can play most YouTube videos without the need for the flash plugin. To
      enable this, go to <ulink url="http://www.youtube.com/html5"/> and click
      on 'Join the HTML5 Trial' (needs cookies enabled).
    </para>

    <para>
      If you use a desktop environment like <application>Gnome</application> or
      <application>KDE</application> you may like to create a
      <filename>firefox.desktop</filename> file so that
      <application>Firefox</application> appears in the panel's menus. If you
      didn't enable startup-notification in your mozconfig change the
      StartupNotify line to false. As the
      <systemitem class="username">root</systemitem> user:
    </para>

<screen role="root"><userinput>mkdir -pv /usr/share/applications &amp;&amp;
mkdir -pv /usr/share/pixmaps &amp;&amp;

cat &gt; /usr/share/applications/firefox.desktop &lt;&lt; "EOF" &amp;&amp;
<literal>[Desktop Entry]
Encoding=UTF-8
Name=Firefox Web Browser
Comment=Browse the World Wide Web
GenericName=Web Browser
Exec=firefox %u
Terminal=false
Type=Application
Icon=firefox
Categories=GNOME;GTK;Network;WebBrowser;
MimeType=text/html;text/xml;application/xhtml+xml;application/vnd.mozilla.xul+xml;text/mml;x-scheme-handler/http;x-scheme-handler/https;
StartupNotify=true</literal>
EOF

ln -sfv /usr/lib/firefox-&firefox-version;/browser/icons/mozicon128.png \
        /usr/share/pixmaps/firefox.png</userinput></screen>

  </sect2>

  <sect2 role="content">
    <title>Contents</title>

    <segmentedlist>
      <segtitle>Installed Programs</segtitle>
      <segtitle>Installed Libraries</segtitle>
      <segtitle>Installed Directory</segtitle>

      <seglistitem>
        <seg>
          firefox
        </seg>
        <seg>
          Numerous libraries, browser components, plugins, extensions, and
          helper modules installed in
          <filename class="directory">/usr/lib/firefox-&firefox-version;</filename>
        </seg>
        <seg>
          /usr/lib/firefox-&firefox-version;
        </seg>
      </seglistitem>
    </segmentedlist>

    <variablelist>
      <bridgehead renderas="sect3">Short Descriptions</bridgehead>
      <?dbfo list-presentation="list"?>
      <?dbhtml list-presentation="table"?>

      <varlistentry id="firefox-prog">
        <term><command>firefox</command></term>
        <listitem>
          <para>
            is a <application>GTK+ 2</application> internet browser that uses the
            Mozilla Gecko rendering engine.
          </para>
          <indexterm zone="firefox firefox-prog">
            <primary sortas="b-firefox">firefox</primary>
          </indexterm>
        </listitem>
      </varlistentry>

    </variablelist>

  </sect2>

</sect1>
