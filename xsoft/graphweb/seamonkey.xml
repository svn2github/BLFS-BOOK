<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook XML V4.4//EN"
   "http://www.oasis-open.org/docbook/xml/4.4/docbookx.dtd" [
  <!ENTITY % general-entities SYSTEM "../../general.ent">
  %general-entities;

  <!ENTITY mozilla-download-http      "http://ftp.mozilla.org/pub/mozilla.org/seamonkey/releases/&seamonkey-version;/seamonkey-&seamonkey-version;.source.tar.bz2">
  <!ENTITY mozilla-download-ftp       "ftp://ftp.mozilla.org/pub/mozilla.org/seamonkey/releases/&seamonkey-version;/seamonkey-&seamonkey-version;.source.tar.bz2">
  <!ENTITY mozilla-md5sum             "e4f2edc5b2248d090303c70f5b28f210">
  <!ENTITY mozilla-size               "33.3 MB">
  <!ENTITY mozilla-buildsize          "625 MB">
  <!ENTITY mozilla-time               "15.3 SBU">

  <!--

  BLFS Devs:

  The information below is for the Enigmail and IPC downloads. Additionally,
  a makemake file is download because we cannot build Enigmail using an
  object directory without it. Information about the Enigmail source to
  check for updates is located at http://enigmail.mozdev.org/source.html.

  The link to the makemake file is near the end of the page in the section
  titled "Using OBJDIR when building Enigmail". Ensure you check the rev
  level of the link and update the "enigmail-makemake-version" entitity
  if necessary. In case you are wondering why the version has the question
  mark and "rev=" in it, it is because the complete URL is used in a command
  and it would extend past the 71 characters that PDF render is limited to.
  It should make sense after you see it rendered in the wget command.

  -->

  <!ENTITY mozilla-enigmail-version   "0.94.0">
  <!ENTITY mozilla-ipc-version        "1.1.3">
  <!ENTITY enigmail-makemake-version  "?rev=1.3">
  <!ENTITY mozilla-enigmail-download  "http://www.mozilla-enigmail.org/downloads/src/enigmail-&mozilla-enigmail-version;.tar.gz">
  <!ENTITY mozilla-ipc-download       "http://www.mozilla-enigmail.org/downloads/src/ipc-&mozilla-ipc-version;.tar.gz">
  <!ENTITY enigmail-makemake-download "http://www.mozdev.org/source/browse/~checkout~/enigmail/src/makemake">
  <!ENTITY mozilla-enigmail-md5sum    "d326c302c1d2d68217fffcaa01ca7632">
  <!ENTITY mozilla-ipc-md5sum         "64ba4c6e3b52568468c4f6680ec7e679">
]>

<sect1 id="seamonkey" xreflabel="Seamonkey-&seamonkey-version;">
  <?dbhtml filename="seamonkey.html" ?>

  <sect1info>
    <othername>$LastChangedBy$</othername>
    <date>$Date$</date>
    <keywordset>
      <keyword role="package">seamonkey-&seamonkey-version;-source.tar</keyword>
      <keyword role="ftpdir">seamonkey</keyword>
    </keywordset>
  </sect1info>

  <title>Seamonkey-&seamonkey-version;</title>

  <indexterm zone="seamonkey">
    <primary sortas="a-Seamonkey">Seamonkey</primary>
  </indexterm>

  <sect2 role="package">
    <title>Introduction to Seamonkey</title>

    <para><application>Seamonkey</application> is a browser suite, the Open
    Source sibling of <application>Netscape</application>. It includes the
    browser, composer, mail and news clients, a calendar client and an
    IRC client.  It is the follow-on to the Mozilla browser suite.</para>

    <para>The Mozilla project also hosts two subprojects that aim to satisfy
    the needs of users who don't need the complete browser suite or prefer to
    have separate applications for browsing and e-mail. These subprojects are
    <ulink url="http://www.mozilla.com/firefox/">Mozilla Firefox</ulink>, (a
    stand-alone browser based on the <application>Mozilla</application> source
    code) and <ulink url="http://www.mozilla.com/thunderbird/">Mozilla
    Thunderbird</ulink>, (a stand-alone mail/newsgroup client based on the
    <application>Mozilla</application> source code). The build instructions for
    these two applications are discussed in separate sections:</para>

    <itemizedlist>
      <listitem>
        <para><xref linkend="firefox"/></para>
      </listitem>
      <listitem>
        <para><xref linkend="thunderbird"/></para>
      </listitem>
    </itemizedlist>

    <bridgehead renderas="sect3">Package Information</bridgehead>
    <itemizedlist spacing="compact">
      <listitem>
        <para>Download (HTTP): <ulink url="&mozilla-download-http;"/></para>
      </listitem>
      <listitem>
        <para>Download (FTP): <ulink url="&mozilla-download-ftp;"/></para>
      </listitem>
      <listitem>
        <para>Download MD5 sum: &mozilla-md5sum;</para>
      </listitem>
      <listitem>
        <para>Download size: &mozilla-size;</para>
      </listitem>
      <listitem>
        <para>Estimated disk space required: &mozilla-buildsize;</para>
      </listitem>
      <listitem>
        <para>Estimated build time: &mozilla-time;</para>
      </listitem>
    </itemizedlist>
<!--
    <bridgehead renderas="sect3">Additional Downloads</bridgehead>
    <itemizedlist spacing="compact">
      <listitem>
        <para>Required patch:
        <ulink
        url="&patch-root;/mozilla-&mozilla-version;-system_nss-1.patch"/>
         (if using system-installed versions of <application>NSS</application> 
         and <application>NSPR</application>)
        </para>
      </listitem>
    </itemizedlist>
-->

    <para>To enable the <application>Enigmail</application> extension to the
    <application>Seamonkey</application> mail client, you'll need to download
    the two tarballs and <command>makemake</command> file listed below. The
    <application>Enigmail</application> extension allows users to access the
    authentication and encryption features provided by the
    <application>GnuPG</application> package. The
    <application>Enigmail</application> extension will not operate correctly
    unless you have <xref linkend="gnupg"/> installed.</para>

    <itemizedlist spacing='compact'>
      <listitem>
        <para><ulink url="&mozilla-enigmail-download;"/></para>
      </listitem>
      <listitem>
        <para>Download MD5 sum (Enigmail): &mozilla-enigmail-md5sum;</para>
      </listitem>
      <listitem>
        <para><ulink url="&mozilla-ipc-download;"/></para>
      </listitem>
      <listitem>
        <para>Download MD5 sum (IPC): &mozilla-ipc-md5sum;</para>
      </listitem>
      <listitem>
        <para><ulink
        url="&enigmail-makemake-download;&enigmail-makemake-version;"/></para>
      </listitem>
    </itemizedlist>

    <para>The <command>makemake</command> file is an enhanced version that will
    be copied into the source tree to replace an existing file during the
    installation instructions. The instructions expect the file to be named
    <filename>seamonkey-&seamonkey-version;-enigmail_makemake</filename>. If you
    have <xref linkend="wget"/> installed, you can download and rename the file
    in one step using the following command:</para>

<screen><userinput>wget -O seamonkey-&seamonkey-version;-enigmail_makemake \
&enigmail-makemake-download;\
&enigmail-makemake-version;</userinput></screen>

    <bridgehead renderas="sect3">Seamonkey Dependencies</bridgehead>

    <bridgehead renderas="sect4">Required</bridgehead>
    <para role="required">
      <xref linkend="gtk2"/>,
      <xref linkend="libidl"/>, and
      <xref linkend="zip"/>
    </para>

    <note>
      <para><application>libjpeg</application> should have been installed
      before <application>GTK+</application> and should exist on your system. If
      for some reason you haven't installed <application>libjpeg</application>,
      you should remove the <option>--with-system-jpeg</option> option from the
      <filename>.mozconfig</filename> file created below.</para>
    </note>

    <bridgehead renderas="sect4">Recommended</bridgehead>
    <para role="recommended">
      <xref linkend="nss"/> (needed if you will be installing any other 
      package that utilizes NSS/NSPR, such as <application>Firefox</application>, 
      <application>Thunderbird</application> or 
      <application>Evolution</application>)
    </para>

    <bridgehead renderas="sect4">Optional</bridgehead>
    <para role="optional">
      <xref linkend="unzip"/>,
      <xref linkend="gnome-vfs"/> (to build the gnomevfs extension),
      <xref linkend="libart_lgpl"/>, and
      <xref linkend="heimdal"/> or <xref linkend="mitkrb"/>
      (for the GSSAPI libraries to build the negotiateauth extension)
    </para>

  </sect2>

  <sect2 role="installation">
    <title>Installation of Seamonkey</title>

    <para>The configuration of <application>Seamonkey</application> is
    accomplished by creating a <filename>.mozconfig</filename> file containing
    the desired configuration options. A default <filename>.mozconfig</filename>
    file is created below. To see the entire list of available configuration
    options (and an abbreviated description of each one), issue
    <command>./configure --help</command>. Additional information can also be
    found below in the section titled <xref linkend="add-mozconfig"/>. If you
    are going to use system-installed versions of the
    <application>NSS</application> and <application>NSPR</application>
    libraries, ensure you uncomment the two lines at the bottom of the file. If
    you would prefer to download the file instead of creating it by typing or
    cut-and-pasting, you can find it at <ulink
    url="&files-anduin;/seamonkey-&seamonkey-version;-mozconfig"/>
    (the file must be installed in the root of the source tree
    <filename class='directory'>mozilla</filename> directory, and named
    <filename>.mozconfig</filename>). Create the file by issuing the following
    command:</para>

<screen><userinput>cat &gt; .mozconfig &lt;&lt; "EOF"
<literal># Options for client.mk

mk_add_options MOZ_OBJDIR=@TOPSRCDIR@/../mozilla-build

# Options for 'configure' (same as command-line options)

# Mandatory options
ac_add_options --enable-application=suite
ac_add_options --prefix=/usr

# Options for system-installed software
ac_add_options --with-system-zlib
ac_add_options --with-system-png
ac_add_options --with-system-jpeg

# Options in all Mozilla-family builds
ac_add_options --enable-strip
ac_add_options --disable-tests
ac_add_options --disable-installer
ac_add_options --disable-accessibility

# Options used just for Mozilla/Seamonkey Suite
ac_add_options --enable-ldap
ac_add_options --enable-calendar

# Options used for system-installed NSS/NSPR
#ac_add_options --with-system-nspr
#ac_add_options --with-system-nss</literal>

EOF</userinput></screen>
<!--
    <para>If you have system-installed Network Security Services (NSS) and
    Netscape Portable Runtime (NSPR) libraries and you uncommented the
    appropriate lines in the <filename>.mozconfig</filename> file to utilize
    them, apply the following patch:</para>

<screen><userinput>patch -Np1 -i ../seamonkey-&seamonkey-version;-system_nss-1.patch</userinput></screen>
-->
    <para>Compile <application>Seamonkey</application> by running the
    following commands:</para>

<screen><userinput>make -f client.mk build</userinput></screen>

    <para>If you're building the <application>Seamonkey</application>
    mail/newsgroup client and plan to install the
    <application>Enigmail</application> extension, issue the following
    commands:</para>

<screen><userinput>tar -xf ../enigmail-&mozilla-enigmail-version;.tar.gz -C mailnews/extensions &amp;&amp;
tar -xf ../ipc-&mozilla-ipc-version;.tar.gz -C extensions &amp;&amp;

install -v -m755 -b ../seamonkey-&mozilla-version;-enigmail_makemake \
    extensions/ipc/makemake &amp;&amp;
install -v -m755 -b ../seamonkey-&mozilla-version;-enigmail_makemake \
    mailnews/extensions/enigmail/makemake &amp;&amp;

cd extensions/ipc &amp;&amp;
./makemake -r &amp;&amp;

cd ../../mailnews/extensions/enigmail &amp;&amp;
./makemake -r &amp;&amp;

cd ../../.. &amp;&amp;
make -C ../mozilla-build/extensions/ipc &amp;&amp;
make -C ../mozilla-build/mailnews/extensions/enigmail &amp;&amp;
make -C ../mozilla-build/mailnews/extensions/enigmail xpi</userinput></screen>

    <para>Install <application>Seamonkey</application> by issuing the following
    commands as the <systemitem class="username">root</systemitem> user:</para>

<screen role="root"><userinput>make -f client.mk install &amp;&amp;

install -v -m644 ../mozilla-build/dist/public/ldap-private/* \
    /usr/include/seamonkey-&seamonkey-version;/ldap &amp;&amp;

install -v -m755 -d /usr/lib/seamonkey-&seamonkey-version;/defaults/isp/US &amp;&amp;
install -v -m644 mailnews/base/ispdata/movemail.rdf \
    /usr/lib/seamonkey-&seamonkey-version;/defaults/isp &amp;&amp;
ln -v -s ../movemail.rdf /usr/lib/seamonkey-&seamonkey-version;/defaults/isp/US</userinput></screen>

<!-- Commenting this out per the discussion on BLFS-Dev about this.
     The stuff commented out below is replaced with text in the
     Configuration section to create links to any system-wide 
     plugins the user may have installed

if [ -L /usr/lib/mozilla/plugins ]; then
     rm /usr/lib/mozilla/plugins
fi &amp;&amp;
if [ -L /usr/lib/mozilla ]; then
     rm /usr/lib/mozilla
fi &amp;&amp;

install -v -m755 -d /usr/lib/mozilla/plugins &amp;&amp;
cp -v /usr/lib/mozilla-1.7.12/plugins/* /usr/lib/mozilla/plugins &amp;&amp;
rm -f /usr/lib/mozilla-1.7.12/plugins &amp;&amp;
ln -v -s ../mozilla/plugins /usr/lib/mozilla-1.7.12 &amp;&amp;
-->

<!-- The following commented out per the discussion on BLFS-Dev. It
     has been determined that we will no longer continue to support
     broken programs that don't look at pkgconfig files to find out
     where Mozilla is installed

ln -v -nsf mozilla-&mozilla-version; /usr/include/mozilla &amp;&amp;
ln -v -nsf mozilla-&mozilla-version; /usr/lib/mozilla &amp;&amp;
-->

    <para>If you built <application>Seamonkey</application> utilizing
    system-installed NSS and NSPR libraries, the
    <filename>seamonkey-ns*.pc</filename> <application>pkgconfig</application>
    files are broken as they point to the wrong directories where the actual
    libraries and interface headers are located. Issue the following commands
    as the <systemitem class="username">root</systemitem> user to replace the
    broken files with symbolic links to known good files:</para>
    
<screen role="root"><userinput>ln -v -sf nss.pc /usr/lib/pkgconfig/seamonkey-nss.pc &amp;&amp;
ln -v -sf nspr.pc /usr/lib/pkgconfig/seamonkey-nspr.pc</userinput></screen>

    <para>If you did <emphasis role="strong">NOT</emphasis> build
    <application>seamonkey</application> utilizing system-installed NSS and
    NSPR libraries, issue the following commands as the
    <systemitem class="username">root</systemitem> user to install the NSS
    interface headers:</para>

<screen role="root"><userinput>install -v -m755 -d /usr/include/seamonkey-&seamonkey-version;/nss &amp;&amp;
cp -v -Lf ../mozilla-build/dist/{private,public}/nss/*.h \
   /usr/include/seamonkey-&seamonkey-version;/nss</userinput></screen>

    <para>If you built the <application>Enigmail</application> extension,
    issue the following commands as the <systemitem
    class="username">root</systemitem> user to install the
    <filename>.xpi</filename> file into the
    <filename class='directory'>/usr/lib/seamonkey-&seamonkey-version;</filename>
    directory:</para>

<screen role="root"><userinput>install -v -m755 -d /usr/lib/seamonkey-&seamonkey-version;/xpi_store &amp;&amp;
install -v -m644 ../mozilla-build/dist/bin/enigmail-&mozilla-enigmail-version;-*.xpi \
    /usr/lib/seamonkey-&seamonkey-version;/xpi_store</userinput></screen>

      <para>There are two methods you can use to install the
      <application>Enigmail</application> extension. Both are shown here and
      provide the same functionality. The first method must be accomplished
      now (before the object directory is removed) and uses the conventional
      <command>make install</command> command to install the
      <application>Enigmail</application> files straight from the distribution
      directory of the object directory. An alternate method is shown as it
      installs using the <filename class='extension'>.xpi</filename> file
      created earlier and can be done later (at any time you desire) as the
      file used to install <application>Enigmail</application> was copied into
      <filename
      class='directory'>/usr/lib/seamonkey-&seamonkey-version;/xpi_store</filename>
      in the previous step. This method can be used to install any
      downloaded <application>Mozilla</application> extension distributed in a
      <filename class='extension'>.xpi</filename> file. There are many
      extensions available for <application>Seamonkey</application>. A list
      containing many of them can be found at
      <ulink url="http://extensionroom.mozdev.org/"/>.</para>

    <para>If you want to install the <application>Enigmail</application>
    extension now, issue the following commands as the
    <systemitem class="username">root</systemitem> user:</para>

<screen role="root"><userinput>make -C ../mozilla-build/extensions/ipc install &amp;&amp;
make -C ../mozilla-build/mailnews/extensions/enigmail install</userinput></screen>

    <para>To install an extension from a created or download
    <filename class='extension'>.xpi</filename> file, you simply need to
    <quote>open</quote> the <filename class='extension'>.xpi</filename> file
    using the <quote>Open File</quote> option of the <quote>File</quote>
    menu of the Navigator window. You can browse to find the file (for example,
    the <application>Enigmail</application>
    <filename class='extension'>.xpi</filename> file is located in
    <filename
    class='directory'>/usr/lib/seamonkey-&seamonkey-version;/xpi_store</filename>),
    select it, then follow the prompts to install the extension.</para>

    <!-- Commenting this out as there really is no need to put the Mozilla
         Suite versions of NSS/NSPR in a system-wide location when there
         is now a BLFS package that does this.

    <para>Some libraries, including the Netscape Portable Runtime (NSPR) and
    Network Security Services (NSS) libraries, installed by
    <application>Mozilla</application> are also needed by other packages.
    These libraries should be in <filename class="directory">/usr/lib</filename>
    so that other packages can link against them. As the <systemitem
    class="username">root</systemitem> user, move them as follows:</para>

<screen role="root"><userinput>for i in \
    lib{nspr4,plc4,plds4,nss3,smime3,softokn3,ssl3}.so libsoftokn3.chk
do
   mv -v /usr/lib/mozilla-&mozilla-version;/$i /usr/lib/
   ln -v -sf ../$i /usr/lib/mozilla-&mozilla-version;/
done</userinput></screen>

    -->

    <!-- Commenting this out for now, as I believe this is only necessary
         for the binary versions of Mozilla. I've built this and had many
         system users access Mozilla simultaneously without having to do
         the steps shown here.

    <para>Create the required component registries to enable multi-user
    installs. These steps should be preformed by the <systemitem
    class="username">root</systemitem> user each time a
    <application>Mozilla</application> add-on is installed. This will allow
    unprivileged users to run <command>mozilla</command>. Enable multi-user
    operation by executing the following:</para>

<screen role="root"><userinput>cd /usr/lib/mozilla-&mozilla-version; &amp;&amp;
export LD_LIBRARY_PATH="$PWD" &amp;&amp;
export MOZILLA_FIVE_HOME="$PWD" &amp;&amp;
./regxpcom &amp;&amp;
./regchrome &amp;&amp;
touch `find . -name *.rdf`</userinput></screen>

    -->

    <note>
      <para>You should run <command>/usr/bin/seamonkey</command> once as the
      <systemitem class="username">root</systemitem> user (or any user with
      write privileges) to create some necessary additional files in the
      <filename class='directory'>/usr</filename> hierarchy. Also do this
      each time you install additional extensions.</para>
    </note>

  </sect2>

  <sect2 role="commands" id="add-mozconfig"
  xreflabel="Additional .mozconfig Options">

    <title>Additional .mozconfig Options</title>

    <para>Information about some of the additional options which can be added
    to the <filename>.mozconfig</filename> configuration file is shown below.
    Note that this is just a few of the options. You may wish to run
    <command>./configure --help</command> and review each of the listed options
    to discover what affect they have on the build. Feel free to add or remove
    options to tailor the build to your desires. Listed below are some common
    options not in the default <filename>.mozconfig</filename> file but can be
    added in order to have the described effect on the Seamonkey compile.</para>
 
    <para><option>ac_add_options --enable-elf-dynstr-gc</option>: Removes
    un-referenced strings from ELF shared objects generated during the build.
    Note that this option breaks the build on alpha.</para>

    <para><option>ac_add_options --disable-mailnews</option>: Disables the mail
    and news clients.</para>

    <para><option>ac_add_options --disable-ldap</option>: Disables LDAP support,
    recommended if mail is disabled.</para>

    <para><option>ac_add_options --enable-xterm-updates</option>: Displays the
    current command in the <command>xterm</command> window title during the
    compilation.</para>

    <para><option>ac_add_options --enable-plaintext-editor-only</option>:
    Disables support for HTML editing. Do not use this switch if you are
    building the mail-news component.</para>

  </sect2>

  <sect2 role="commands">
    <title>.mozconfig Option Explanations</title>

    <para>To simplify reading the options below, they are labeled without
    <parameter>ac_add_options</parameter> inserted at the beginning of the
    option.</para>

    <para><parameter>mk_add_options
    MOZ_OBJDIR=@TOPSRCDIR@/../mozilla-build</parameter>: Creates an object
    directory and specifies to build the package in that directory. If desired,
    modify the location of the object directory to a directory inside the
    source tree by removing <quote>../</quote> from the line.</para>

    <para><parameter>--enable-application=suite</parameter>: Identifies the
    build as a <application>Seamonkey</application> suite build.</para>

    <para><parameter>--with-system-zlib --with-system-png
    --with-system-jpeg</parameter>: Uses the system-installed versions of these
    packages.</para>

    <para><parameter>--enable-default-toolkit=gtk2 --enable-xft 
    --disable-freetype2</parameter>: Use the GTK2 toolkit for graphics
    rendering and XFT (automatically pulls in the
    <application>FreeType</application> libraries) for font rendering.</para>

    <para><parameter>--enable-extensions=all</parameter>: Enables all available
    extensions. If you want, you can disable any or all extensions other than
    the browser by changing this switch to
    <option>--enable-extensions="default,-venkman,-inspector,..."</option>.
    For a short description of the various extensions available with the
    <application>Seamonkey</application> source, see <ulink
    url="http://linuxfromscratch.org/~tushar/downloads/mozilla-extensions.txt"/>.
    </para>

    <para><parameter>--enable-crypto</parameter>: Enable the Personal
    Security Manager to enable SSL connections.</para>

    <para><parameter>--enable-calendar</parameter>: Builds the calendar
    application. Remove this parameter if you don't wish to build it.</para>

    <para><parameter>--enable-xinerama; --enable-optimize; --enable-reorder;
    --enable-strip; --enable-cpp-rtti --disable-accessibility; --disable-debug;
    --disable-tests; --disable-logging; --disable-pedantic;
    --disable-installer</parameter>: Various options that affect what components
    are built and some optimization options. You can pick and choose from these
    options. More information on them, and many other available options, can be
    found by running <command>./configure --help</command>.</para>

  </sect2>

  <sect2 role="commands">
    <title>Command Explanations</title>

    <para><command>make -f client.mk ...</command>: Mozilla products are
    packaged to allow the use of a configuration file which can be used to
    pass the configuration settings to the <command>configure</command>
    command. <command>make</command> uses the <filename>client.mk</filename>
    file to get initial configuration and setup parameters, then depending on
    the target parameter (<parameter>build</parameter> or
    <parameter>install</parameter>), either runs the
    <command>configure</command> script and compiles the package or installs
    the package.</para>

    <para><command>./makemake -r</command>: This command is used to recursively
    create <filename>Makefile</filename>s in the appropriate subdirectory
    of mozilla-build.</para>

    <para><command>make -C ... xpi</command>: This command builds the
    <application>Enigmail</application>
    <filename class='extension'>.xpi</filename> file which can be used to
    install <application>Enigmail</application>.</para>

    <para><command>install .../movemail.rdf ...</command>: This
    command is used to install a file inadvertently left out of the
    installation script.</para>

    <!-- Commenting this out as the commands needing these explanations
         are also commented out

    <para><command>if [ -d /usr/lib/mozilla/plugins ] ... fi</command>: Some
    applications may have already installed <application>Mozilla</application>
    plugins. This set of commands moves any existing plugins to the newly
    created plugin directory, then removes the existing
    <filename class='directory'>/usr/lib/mozilla</filename> directory.</para>

    <para><command>ln -nsf mozilla-&mozilla-version; ...</command>:
    <application>Mozilla</application> installs headers and libraries in
    version specific directories. These commands makes symbolic links so that
    applications depending on <application>Mozilla</application> (such as
    <application>OpenOffice</application>, <application>Galeon</application>,
    etc.) don't need to know which version of <application>Mozilla</application>
    is installed.</para>
    -->

  </sect2>

  <sect2 role="configuration">
    <title>Configuring Seamonkey</title>

    <para>No specific configuration is required as long as the
    <command>seamonkey</command> script is in the user's path. If
    <application>Seamonkey</application> is installed in a non-standard location,
    then make a symlink to the <command>seamonkey</command> script in the
    <filename class="directory">/usr/bin</filename> directory.</para>

    <para>Many applications look for <command>netscape</command> when they need
    to open a browser. You may make the following symlink for convenience (as
    the <systemitem class="username">root</systemitem> user).</para>

<screen role="root"><userinput>ln -v -sf seamonkey /usr/bin/netscape</userinput></screen>

    <para>For installing various <application>Seamonkey</application> plugins,
    refer to <ulink url="http://plugindoc.mozdev.org/linux.html">Mozdev's
    PluginDoc Project</ulink>. If you have <xref linkend="jdk"/> already
    installed, create the following link as the
    <systemitem class="username">root</systemitem> user to utilize the
    <application>JAVA</application> plugin: </para>

<screen role="root"><userinput>ln -v -s $JAVA_HOME/jre/plugin/i386/ns7/libjavaplugin_oji.so \
    /usr/lib/seamonkey-&seamonkey-version;/plugins</userinput></screen>

    <para>Some packages install Seamonkey plugins into the default system-wide
    directory <filename class='directory'>/usr/lib/mozilla/plugins</filename>.
    If desired, create symbolic links in the <application>Seamonkey</application>
    plugin directory
    <filename class='directory'>/usr/lib/seamonkey-&seamonkey-version;/plugins</filename>
    to the files in the default plugin directory (you should link to the actual
    files and not other links). Alternatively, you can move or copy the files
    in the default plugin directory to the
    <application>Seamonkey</application> plugin directory. An example of creating
    a symbolic link is shown below. Create the links as the
    <systemitem class="username">root</systemitem> user:</para>

<screen role="root"><userinput>ln -v -s ../../seamonkey/plugins/<replaceable>[plugin.so]</replaceable> \
    /usr/lib/seamonkey-&seamonkey-version;/plugins</userinput></screen>

    <para>Along with using the <quote>Preferences</quote> menu to configure
    <application>Seamonkey</application>'s options and preferences to suit
    individual tastes, finer grain control of many options is only available
    using a tool not available from the general menu system. To access this
    tool, you'll need to open a Navigator window and enter
    <systemitem role='url'>about:config</systemitem> in the
    address bar. This will display a list of the configuration preferences and
    information related to each one. You can use the <quote>Filter:</quote> bar
    to enter search criteria and narrow down the listed items. Changing a
    preference can be done using two methods. One, if the preference has a
    boolean value (True/False), simply double-click on the preference to toggle
    the value and two, for other preferences simply right-click on the desired
    line, choose <quote>Modify</quote> from the menu and change the value.
    Creating new preference items is accomplished in the same way, except
    choose <quote>New</quote> from the menu and provide the desired data into
    the fields when prompted.</para>

    <tip>
      <para>There is a multitude of configuration parameters you can tweak to
      customize <application>Seamonkey</application>. A very extensive and
      up-to-date list of these parameters can be found at <ulink
      url="http://preferential.mozdev.org/preferences.html"/>.</para>
    </tip>

  </sect2>

  <sect2 role="content">
    <title>Contents</title>

    <segmentedlist>
      <segtitle>Installed Programs</segtitle>
      <segtitle>Installed Libraries</segtitle>
      <segtitle>Installed Directories</segtitle>

      <seglistitem>
        <seg>seamonkey and seamonkey-config</seg>
        <seg>Numerous libraries, browser, and email/newsgroup components,
        plugins, extensions, and helper modules installed in <filename
        class='directory'>/usr/lib/seamonkey-&seamonkey-version;</filename></seg>
        <seg>/usr/include/seamonkey-&seamonkey-version;,
        /usr/lib/seamonkey-&seamonkey-version;, and
        /usr/share/idl/seamonkey-&seamonkey-version;</seg>
      </seglistitem>
    </segmentedlist>

    <variablelist>
      <bridgehead renderas="sect3">Short Descriptions</bridgehead>
      <?dbfo list-presentation="list"?>
      <?dbhtml list-presentation="table"?>

      <varlistentry id="seamonkey-prog">
        <term><command>seamonkey</command></term>
        <listitem>
          <para>is a browser/email/newsgroup/calendar/chat client suite. The
          various components such as the Composer, mail-news client, calendar,
          IRC chat client and address book can be accessed from the menu after
          <command>seamonkey</command> starts or via command-line switches to
          the <command>seamonkey</command> script. Issue
          <command>man seamonkey</command> for additional information.</para>
          <indexterm zone="seamonkey seamonkey-prog">
            <primary sortas="b-seamonkey">seamonkey</primary>
          </indexterm>
        </listitem>
      </varlistentry>

    </variablelist>

  </sect2>

</sect1>
