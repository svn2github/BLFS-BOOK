<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
   "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
  <!ENTITY % general-entities SYSTEM "../../general.ent">
  %general-entities;

  <!ENTITY autogen-download-http "http://ftp.gnu.org/gnu/autogen/rel5.12/autogen-&autogen-version;.tar.bz2">
  <!ENTITY autogen-download-ftp  " ">
  <!ENTITY autogen-md5sum        "126e56be629cda747390e8ba9be71e4b">
  <!ENTITY autogen-size          "1.1 MB">
  <!ENTITY autogen-buildsize     "39 MB">
  <!ENTITY autogen-time          "0.5 SBU">
]>

<sect1 id="autogen" xreflabel="autogen-&autogen-version;">
  <?dbhtml filename="autogen.html"?>

  <sect1info>
    <othername>$LastChangedBy$</othername>
    <date>$Date$</date>
  </sect1info>

  <title>autogen-&autogen-version;</title>

  <indexterm zone="autogen">
    <primary sortas="a-autogen">autogen</primary>
  </indexterm>

  <sect2 role="package">
    <title>Introduction to autogen</title>

    <para><application>Autogen</application> is a tool designed to simplify the
    creation and maintenance of programs that contain large amounts of repetitious
    text. It is especially valuable in programs that have several blocks of text
    that must be kept synchronized.</para>

    &lfs70_built;

    <bridgehead renderas="sect3">Package Information</bridgehead>
    <itemizedlist spacing="compact">
      <listitem>
        <para>Download (HTTP): <ulink url="&autogen-download-http;"/></para>
      </listitem>
      <listitem>
        <para>Download (FTP): <ulink url="&autogen-download-ftp;"/></para>
      </listitem>
      <listitem>
        <para>Download MD5 sum: &autogen-md5sum;</para>
      </listitem>
      <listitem>
        <para>Download size: &autogen-size;</para>
      </listitem>
      <listitem>
        <para>Estimated disk space required: &autogen-buildsize;</para>
      </listitem>
      <listitem>
        <para>Estimated build time: &autogen-time;</para>
      </listitem>
    </itemizedlist>

    <bridgehead renderas="sect3">Additional Downloads</bridgehead>
    <itemizedlist spacing='compact'>
      <listitem>
        <para>Optional Patch: <ulink
        url="&patch-root;/autogen-&autogen-version;-build_shared-1.patch"/></para>
      </listitem>
    </itemizedlist>

    <bridgehead renderas="sect3">autogen Dependencies</bridgehead>

    <bridgehead renderas="sect4">Required</bridgehead>
    <para role="required"><xref linkend="guile"/></para>

    <para condition="html" role="usernotes">User Notes:
    <ulink url="&blfs-wiki;/autogen"/></para>

  </sect2>

  <sect2 role="installation">
    <title>Installation of autogen</title>

    <!-- yes, I do mean if and only if (ken) : this package is an aggravation -->
    <para>IFF you do not wish to install the static library, and will
    add '--enable-static=no' to the configure, apply the patch.
    This is not recommended, but included as an example of how a common
    option may have an unexpected implementation. The preferred
    approach for this package is to discard the static library after
    the package has been installed.</para>

<screen><userinput>patch -Np1 -i ../autogen-&autogen-version;-build_shared-1.patch
</userinput></screen>

    <para>Install <application>autogen</application> by running the following
    commands:</para>

<screen><userinput>./configure --prefix=/usr &amp;&amp;
make</userinput></screen>

    <para>To test the results, issue: <command>make check</command>.
    You can expect some failures.  If you applied the patch, the
    testsuite will fail because it is looking for the static library.</para>

    <para>Now, as the <systemitem class="username">root</systemitem> user:</para>

<screen role="root"><userinput>make install</userinput></screen>

  </sect2>

  <sect2 role="commands">
    <title>Command Explanations</title>

    <para><command>patch -Np1 -i ...</command>: The patch modifies the
    <filename>mk-agen-texi-in</filename> file so that it can use the shared
    <filename>libopts.so</filename> when rebuilding the supplied documentation.
    No doubt similar changes can be made to enable the testsuite to run in the
    absence of the static library.</para>

    <para><option>--enable-static=no</option>: This switch prevents the static
    library being installed.  Unusually, in this package it prevents it being
    created and used by the package itself.</para>

  </sect2>

  <sect2 role="content">
    <title>Contents</title>

    <segmentedlist>
      <segtitle>Installed Programs</segtitle>
      <segtitle>Installed Library</segtitle>
      <segtitle>Installed Directories</segtitle>

      <seglistitem>
        <seg>autogen, autoopts-config, columns, getdefs, and xml2ag</seg>
        <seg>libopts.{so,a}</seg>
        <seg>/usr/{include/autoopts,share/autogen}</seg>
      </seglistitem>
    </segmentedlist>

    <variablelist>
      <bridgehead renderas="sect3">Short Descriptions</bridgehead>
      <?dbfo list-presentation="list"?>
      <?dbhtml list-presentation="table"?>

      <varlistentry id="autogen-prog">
        <term><command>autogen</command></term>
        <listitem>
          <para>is an automated text file generator.</para>
          <indexterm zone="autogen autogen-prog">
            <primary sortas="b-autogen-prog">autogen-prog</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="autoopts-config">
        <term><command>autoopts-config</command></term>
        <listitem>
          <para>does this .....</para>
          <indexterm zone="autogen autoopts-config">
            <primary sortas="b-autoopts-config">autoopts-config</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="columns">
        <term><command>columns</command></term>
        <listitem>
          <para>does this .....</para>
          <indexterm zone="autogen columns">
            <primary sortas="b-columns">columns</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="getdefs">
        <term><command>getdefs</command></term>
        <listitem>
          <para>does this .....</para>
          <indexterm zone="autogen getdefs">
            <primary sortas="b-getdefs">getdefs</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="xml2ag">
        <term><command>xml2ag</command></term>
        <listitem>
          <para>does this .....</para>
          <indexterm zone="autogen xml2ag">
            <primary sortas="b-xml2ag">xml2ag</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libopts">
        <term><filename class='libraryfile'>libopts.{so,a}</filename></term>
        <listitem>
          <para>contains functions that .....</para>
          <indexterm zone="autogen libopts">
            <primary sortas="c-libopts">libopts.{so,a}</primary>
          </indexterm>
        </listitem>
      </varlistentry>

    </variablelist>

  </sect2>

</sect1>
