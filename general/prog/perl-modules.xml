<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
   "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
  <!ENTITY % general-entities SYSTEM "../../general.ent">
<!-- Lasciate ogne speranza, voi ch'intrate
  (Abandon all hope, ye who enter here). -->
  %general-entities;

  <!ENTITY perl_authors "https://www.cpan.org/authors">

  <!ENTITY Archive-Zip-download-http "&perl_authors;/id/P/PH/PHRED/Archive-Zip-&Archive-Zip-version;.tar.gz">
  <!ENTITY Archive-Zip-md5sum "b649a593391573f9382cef8c08d1d5ba">

  <!ENTITY autovivification-download-http "&perl_authors;/id/V/VP/VPIT/autovivification-&autovivification-version;.tar.gz">
  <!ENTITY autovivification-md5sum "925c7d4c64c623db02845b355e3c6a19">

  <!ENTITY Business-ISBN-download-http "&perl_authors;/id/B/BD/BDFOY/Business-ISBN-&Business-ISBN-version;.tar.gz">
  <!ENTITY Business-ISBN-md5sum "60b36c0a92cf51e9027ec3d9f38e7224">

  <!ENTITY Business-ISMN-download-http "&perl_authors;/id/B/BD/BDFOY/Business-ISMN-&Business-ISMN-version;.tar.gz">
  <!ENTITY Business-ISMN-md5sum "87e36c8ccc9a9434494a849b7cf2fcc5">

  <!ENTITY Business-ISSN-download-http "&perl_authors;/id/B/BD/BDFOY/Business-ISSN-&Business-ISSN-version;.tar.gz">
  <!ENTITY Business-ISSN-md5sum "c226db6cdb9dfe77d17ad1d540b49f47">

  <!ENTITY Class-Accessor-download-http "&perl_authors;/id/K/KA/KASEI/Class-Accessor-&Class-Accessor-version;.tar.gz">
  <!ENTITY Class-Accessor-md5sum "0d9640d237a13276145f7e44b4855b89">

  <!ENTITY Data-Compare-download-http "&perl_authors;/id/D/DC/DCANTRELL/Data-Compare-&Data-Compare-version;.tar.gz">
  <!ENTITY Data-Compare-md5sum "6a397ab5833237f3ca05ed7277b19a7a">

  <!ENTITY Data-Dump-download-http "&perl_authors;/id/G/GA/GAAS/Data-Dump-&Data-Dump-version;.tar.gz">
  <!ENTITY Data-Dump-md5sum "762c111e525c82ff23d62c90821b26e9">

  <!ENTITY Data-Uniqid-download-http "&perl_authors;/id/M/MW/MWX/Data-Uniqid-&Data-Uniqid-version;.tar.gz">
  <!ENTITY Data-Uniqid-md5sum "6bab3b5da09fedfdf60ce2629a7367db">

  <!ENTITY DateTime-Calendar-Julian-download-http "&perl_authors;/id/P/PI/PIJLL/DateTime-Calendar-Julian-&DateTime-Calendar-Julian-version;.tar.gz">
  <!ENTITY DateTime-Calendar-Julian-md5sum "de688324eb33a27449ac2a5bfe1453a0">

  <!ENTITY DateTime-Format-Builder-download-http "&perl_authors;/id/D/DR/DROLSKY/DateTime-Format-Builder-&DateTime-Format-Builder-version;.tar.gz">
  <!ENTITY DateTime-Format-Builder-md5sum "21d950a9425c0173d6191697bf9dc4dc">

  <!ENTITY Encode-EUCJPASCII-download-http "&perl_authors;/id/N/NE/NEZUMI/Encode-EUCJPASCII-&Encode-EUCJPASCII-version;.tar.gz">
  <!ENTITY Encode-EUCJPASCII-md5sum "5daa65f55b7c2050bb0713d9e95f239d">

  <!ENTITY Encode-HanExtra-download-http "&perl_authors;/id/A/AU/AUDREYT/Encode-HanExtra-&Encode-HanExtra-version;.tar.gz">
  <!ENTITY Encode-HanExtra-md5sum "e1d3bc32c1c8ee304235a06fbcd5d5a4">

  <!ENTITY Encode-JIS2K-download-http "&perl_authors;/id/D/DA/DANKOGAI/Encode-JIS2K-&Encode-JIS2K-version;.tar.gz">
  <!ENTITY Encode-JIS2K-md5sum "60539471aa408a2b793cd45a6ce651db">

  <!ENTITY Error-download-http "&perl_authors;/id/S/SH/SHLOMIF/Error-&Error-version;.tar.gz">
  <!ENTITY Error-md5sum "1a2ee7f0dc44f9ee76661a16bbbc0c48">

  <!ENTITY File-BaseDir-download-http "&perl_authors;/id/K/KI/KIMRYAN/File-BaseDir-&File-BaseDir-version;.tar.gz">
  <!ENTITY File-BaseDir-md5sum "5d10401970d209049c8491d2906c3e13">

  <!ENTITY File-Slurp-download-http "&perl_authors;/id/U/UR/URI/File-Slurp-&File-Slurp-version;.tar.gz">
  <!ENTITY File-Slurp-md5sum "7d584cd15c4f8b9547765eff8c4ef078">

  <!ENTITY File-Which-download-http "&perl_authors;/id/P/PL/PLICEASE/File-Which-&File-Which-version;.tar.gz">
  <!ENTITY File-Which-md5sum "115a6efe5d7e9621237fcb655c7a0980">

  <!ENTITY HTML-Parser-download-http "&perl_authors;/id/G/GA/GAAS/HTML-Parser-&HTML-Parser-version;.tar.gz">
  <!ENTITY HTML-Parser-md5sum "eb7505e5f626913350df9dd4a03d54a8">

  <!ENTITY IPC-Run3-download-http "&perl_authors;/id/R/RJ/RJBS/IPC-Run3-&IPC-Run3-version;.tar.gz">
  <!ENTITY IPC-Run3-md5sum "5a8cec571c51a118b265cf6e24e55761">

  <!ENTITY libwww-perl-download-http "&perl_authors;/id/O/OA/OALDERS/libwww-perl-&LWP-version;.tar.gz">
  <!ENTITY libwww-perl-md5sum "457bf4a4f40af3e2f43653329a9c6ab7">

  <!ENTITY Lingua-Translit-download-http "&perl_authors;/id/A/AL/ALINKE/Lingua-Translit-&Lingua-Translit-version;.tar.gz">
  <!ENTITY Lingua-Translit-md5sum "e95386614b65b32a8ed9c1a24ae110f8">

  <!ENTITY List-AllUtils-download-http "&perl_authors;/id/D/DR/DROLSKY/List-AllUtils-&List-AllUtils-version;.tar.gz">
  <!ENTITY List-AllUtils-md5sum "5d7f33d6b21aa461c12b002e20a2cbb6">

  <!ENTITY List-MoreUtils-download-http "&perl_authors;/id/R/RE/REHSACK/List-MoreUtils-&List-MoreUtils-version;.tar.gz">
  <!ENTITY List-MoreUtils-md5sum "0a5462045de148c807d3f18e5074064f">

  <!ENTITY Log-Log4perl-download-http "&perl_authors;/id/M/MS/MSCHILLI/Log-Log4perl-&Log-Log4perl-version;.tar.gz">
  <!ENTITY Log-Log4perl-md5sum "8e96fb5e236c92445947eceb903326ba">

  <!ENTITY LWP-Protocol-https-download-http "&perl_authors;/id/M/MS/MSCHILLI/LWP-Protocol-https-&LWP-Protocol-https-version;.tar.gz">
  <!ENTITY LWP-Protocol-https-md5sum "404c7984521699ab4a6973f155f1726f">

  <!ENTITY Module-Build-download-http "&perl_authors;/id/L/LE/LEONT/Module-Build-&Module-Build-version;.tar.gz">
  <!ENTITY Module-Build-md5sum "b74c2f6e84b60aad3a3defd30b6f0f4d">

  <!ENTITY Net-DNS-download-http "&perl_authors;/id/N/NL/NLNETLABS/Net-DNS-&Net-DNS-version;.tar.gz">
  <!ENTITY Net-DNS-md5sum "7e7c6cf8184df4d49500a003d998764a">

  <!ENTITY Parse-Yapp-download-http "&perl_authors;/id/W/WB/WBRASWELL/Parse-Yapp-&Parse-Yapp-version;.tar.gz">
  <!ENTITY Parse-Yapp-md5sum "69584d5b0f0304bb2a23cffcd982c5de">

  <!ENTITY Regexp-Common-download-http "&perl_authors;/id/A/AB/ABIGAIL/Regexp-Common-&Regexp-Common-version;.tar.gz">
  <!ENTITY Regexp-Common-md5sum "b1bb40759b84154990f36a160160fb94">

  <!ENTITY SGMLSpm-download-http "&perl_authors;/id/R/RA/RAAB/SGMLSpm-&SGMLSpm-version;.tar.gz">
  <!ENTITY SGMLSpm-md5sum "746c74ae969992cedb1a2879b4168090">

  <!ENTITY Sort-Key-download-http "&perl_authors;/id/S/SA/SALVA/Sort-Key-&Sort-Key-version;.tar.gz">
  <!ENTITY Sort-Key-md5sum "a37ab0da0cfdc26e57b4c79e39f6d98f">

  <!ENTITY Test-Command-download-http "&perl_authors;/id/D/DA/DANBOO/Test-Command-&Test-Command-version;.tar.gz">
  <!ENTITY Test-Command-md5sum "9ab83c4695961dbe92cd86efe08f0634">

  <!ENTITY Test-Differences-download-http "&perl_authors;/id/D/DC/DCANTRELL/Test-Differences-&Test-Differences-version;.tar.gz">
  <!ENTITY Test-Differences-md5sum "ecfda620fe133e36a6e392d94ab8424d">

  <!ENTITY Text-BibTeX-download-http "&perl_authors;/id/A/AM/AMBS/Text-BibTeX-&Text-BibTeX-version;.tar.gz">
  <!ENTITY Text-BibTeX-md5sum "a754759c80ab484c9f2b02b2fd4467c9">

  <!ENTITY Text-CSV-download-http "&perl_authors;/id/I/IS/ISHIGAKI/Text-CSV-&Text-CSV-version;.tar.gz">
  <!ENTITY Text-CSV-md5sum "1e076b4b1f8ba6a5003bf93f3c437a9e">

  <!ENTITY Text-Roman-download-http "&perl_authors;/id/S/SY/SYP/Text-Roman-&Text-Roman-version;.tar.gz">
  <!ENTITY Text-Roman-md5sum "1f6b09c0cc1f4425b565ff787a39fd83">

   <!-- NB biber is updated frequently and tends to need the latest Unicode-Collate,
   whereas stable perl releases lag behind.  So, next time the shipped version is
   adequate, just comment it, it will soon get reinstated as a dependency -->
  <!ENTITY Unicode-Collate-download-http "&perl_authors;/id/S/SA/SADAHIRO/Unicode-Collate-&Unicode-Collate-version;.tar.gz">
  <!ENTITY Unicode-Collate-md5sum "6f9dcc7801fa2516993dcb59f8b61f6d">

  <!ENTITY Unicode-LineBreak-download-http "&perl_authors;/id/N/NE/NEZUMI/Unicode-LineBreak-&Unicode-LineBreak-version;.tar.gz">
  <!ENTITY Unicode-LineBreak-md5sum "de7672227922260ac92d20bbad29660b">

  <!ENTITY URI-download-http "&perl_authors;/id/E/ET/ETHER/URI-&URI-version;.tar.gz">
  <!ENTITY URI-md5sum "cd56d81ed429efaa97e7f3ff08851b48">

  <!ENTITY XML-LibXML-Simple-download-http "&perl_authors;/id/G/GR/GRANTM/XML-LibXML-Simple-&XML-LibXML-Simple-version;.tar.gz">
  <!ENTITY XML-LibXML-Simple-md5sum "1cd2e8e3421160c42277523d5b2f4dd2">

  <!ENTITY XML-LibXSLT-download-http "&perl_authors;/id/S/SH/SHLOMIF/XML-LibXSLT-&XML-LibXSLT-version;.tar.gz">
  <!ENTITY XML-LibXSLT-md5sum "adf26f5195e18087c89ef3e7f7d97c43">

  <!ENTITY XML-Simple-download-http "&perl_authors;/id/G/GR/GRANTM/XML-Simple-&XML-Simple-version;.tar.gz">
  <!ENTITY XML-Simple-md5sum "1cd2e8e3421160c42277523d5b2f4dd2">

  <!ENTITY XML-Writer-download-http "&perl_authors;/id/J/JO/JOSEPHW/XML-Writer-&XML-Writer-version;.tar.gz">
  <!ENTITY XML-Writer-md5sum "b9c2420c243c6a36ce45a008740fcede">

]>

<!-- FIXME (I only used that so that this gets highlighted by vim ;-)
 If you have the misfortune to have to add a new module which puts a program
 into /usr/bin/, please document it at the end of the page.  'perldoc' is
 sometimes a good place to start, then for scripts look at any comments in the
 script, and if you get a package like Text::BibTeX with compiled progs and
 library, look at the comments in the code

 Also, for external modules where we link to CPAN without a current version,
 prefer to use http://search.cpan.org/dist/Module-Name if that works, rather
 than pointing to a maintainers home directory : the maintainer for a package
 sometimes changes.  Also,  use '-' rather than '::'  because '-' will go
 directly to the page instead of providing a list of possible matches.

 Where a dependency is used by multiple other modules on this page, but not by
 packages elsewhere in the book, promote it to a top-level entry so that it can
 be linked - but do not give it a version.  See Capture::Tiny for an example.

 If you have to add a new module, working out which dependencies are part of the
 core perl distribution can be error-prone : for an incomplete list see

  general/prog/perl-core-modules.txt

 and please update that it you find new deps which are part of the core.

 -->

<sect1 id="perl-modules" xreflabel="Perl modules">
  <?dbhtml filename="perl-modules.html" ?>

  <sect1info>
    <othername>$LastChangedBy$</othername>
    <date>$Date$</date>
  </sect1info>

  <title>Perl Modules</title>

  <indexterm zone="perl-modules">
    <primary sortas="a-Perl-modules">Perl modules</primary>
  </indexterm>

  <sect2 role="package">
    <title>Introduction to Perl Modules</title>

    <para>The <application>Perl</application> module packages add useful
    objects to the <application>Perl</application> language. Modules utilized
    by packages throughout BLFS are listed here, along with their dependencies.
    Installation of the modules shown on this page should be accomplished by
    installing the dependencies in the order listed. The Perl Module standard
    build and installation instructions are shown at the bottom of this page.
    </para>

    <para>If a module is used by more than one other module on this page, but
    not by other packages in the book, it is listed by name here at the top
    level (but without a version) to slightly reduce the complexity of the XML
    source for this page.</para>

    <para>Where a module is shown as '(for the testsuite)' it is required if
    you wish to run the test for the module which uses it. In these cases, only
    the required or recommended dependencies are listed - there might be other
    modules which allow more tests to be run, but omitting them will still allow
    the tests to <literal>PASS</literal>.</para>

    <note>
      <para>For unversioned modules on this page, if you are building without
      using the CPAN automated install you should check when the current version
      was released. If it is recent you should review the 'Changes' link for it
      at http://search .cpan.org in case the dependencies have altered.</para>
    </note>

    <!-- Archive::Zip -->
    <bridgehead renderas="sect3" id="perl-archive-zip"
    xreflabel="Archive::Zip-&Archive-Zip-version;">
    Archive::Zip-&Archive-Zip-version;</bridgehead>

    <indexterm zone="perl-modules perl-archive-zip">
      <primary sortas="a-Archive-Zip">Archive::Zip</primary>
    </indexterm>

    <para>The Archive::Zip module allows a <application>Perl</application>
    program to create, manipulate, read, and write Zip archive files. This
    module uses the standard <xref linkend="perl-standard-install"/>.</para>

    &lfs81_checked;

    <itemizedlist>
      <listitem>
        <para>
          <ulink url="&Archive-Zip-download-http;">Archive::Zip-&Archive-Zip-version;</ulink>
        </para>
      </listitem>
      <listitem>
<literallayout>&Archive-Zip-download-http;
MD5 sum: &Archive-Zip-md5sum;</literallayout>
        <itemizedlist>
          <listitem><literallayout><ulink url="http://search.cpan.org/dist/Test-MockModule/">Test::MockModule</ulink> - This uses the <xref linkend="perl-build-install"/>
(http://search.cpan.org/dist/Test-MockModule/)</literallayout>
            <itemizedlist>
              <listitem> <literallayout><ulink url="http://search.cpan.org/dist/SUPER/">SUPER</ulink>
(http://search.cpan.org/dist/SUPER/) (for the testsuite)</literallayout>
                <itemizedlist>
                  <listitem>
                    <para>
                      <xref linkend="perl-sub-identify"/>
                    </para>
                  </listitem>
                </itemizedlist>
              </listitem>
            </itemizedlist>
          </listitem>
        </itemizedlist>
      </listitem>
    </itemizedlist>

    <!-- autovivification -->
    <bridgehead renderas="sect3" id="perl-autovivification"
    xreflabel="autovivification-&autovivification-version;">
    autovivification-&autovivification-version;</bridgehead>

    <indexterm zone="perl-modules perl-autovivification">
      <primary sortas="a-autovivification">autovivification</primary>
    </indexterm>

    <para>The autovivification module allows you to lexically disable
    autovivification. This module uses the standard
    <xref linkend="perl-standard-install"/>.</para>

    &lfs81_checked;

    <itemizedlist>
      <listitem>
        <para>
          <ulink url="&autovivification-download-http;">autovivification-&autovivification-version;</ulink>
        </para>
      </listitem>
      <listitem>
<literallayout>&autovivification-download-http;
MD5 sum: &autovivification-md5sum;</literallayout>
      </listitem>
    </itemizedlist>

    <!-- Business::ISBN -->
    <bridgehead renderas="sect3" id="perl-business-isbn"
    xreflabel="Business::ISBN-&Business-ISBN-version;">
    Business::ISBN-&Business-ISBN-version;</bridgehead>

    <indexterm zone="perl-modules perl-business-isbn">
      <primary sortas="a-Business-ISBN">Business::ISBN</primary>
    </indexterm>

    <para>The Business::ISBN module is for work with International Standard Book
    Numbers.  This module and its dependencies use the standard
    <xref linkend="perl-standard-install"/>.</para>

    &lfs81_checked;

    <itemizedlist>
      <listitem>
        <para>
          <ulink url="&Business-ISBN-download-http;">Business::ISBN-&Business-ISBN-version;</ulink>
        </para>
      </listitem>
      <listitem>
<literallayout>&Business-ISBN-download-http;
MD5 sum: &Business-ISBN-md5sum;</literallayout>
        <itemizedlist>
          <listitem><literallayout><ulink url="http://search.cpan.org/dist/Business-ISBN-Data/">Business::ISBN::Data</ulink>
(http://search.cpan.org/dist/Business-ISBN-Data/)</literallayout>
          </listitem>
          <listitem><literallayout><ulink url="http://search.cpan.org/dist/Mojolicious/">Mojolicious</ulink>
(http://search.cpan.org/dist/Mojolicious/)</literallayout>
          </listitem>
        </itemizedlist>
      </listitem>
    </itemizedlist>

    <!-- Business::ISMN -->
    <bridgehead renderas="sect3" id="perl-business-ismn"
    xreflabel="Business::ISMN-&Business-ISMN-version;">
    Business::ISMN-&Business-ISMN-version;</bridgehead>

    <indexterm zone="perl-modules perl-business-ismn">
      <primary sortas="a-Business-ISMN">Business::ISMN</primary>
    </indexterm>

    <para>The Business::ISMN module is for work with International Standard
    Music Numbers.  This module uses the standard
    <xref linkend="perl-standard-install"/>.</para>

    &lfs81_checked;

    <itemizedlist>
      <listitem>
        <para>
          <ulink url="&Business-ISMN-download-http;">Business::ISMN-&Business-ISMN-version;</ulink>
        </para>
      </listitem>
      <listitem>
<literallayout>&Business-ISMN-download-http;
MD5 sum: &Business-ISMN-md5sum;</literallayout>
        <itemizedlist>
          <listitem><literallayout><ulink url="http://search.cpan.org/~bdfoy/Tie-Cycle/">Tie::Cycle</ulink>
(http://search.cpan.org/~bdfoy/Tie-Cycle/)</literallayout>
          </listitem>
        </itemizedlist>
      </listitem>
    </itemizedlist>

    <!-- Business::ISSN -->
    <bridgehead renderas="sect3" id="perl-business-issn"
    xreflabel="Business::ISSN-&Business-ISSN-version;">
    Business::ISSN-&Business-ISSN-version;</bridgehead>

    <indexterm zone="perl-modules perl-business-issn">
      <primary sortas="a-Business-ISSN">Business::ISSN</primary>
    </indexterm>

    <para>The Business::ISSN module is for work with International Standard
    Serial Numbers.  This module uses the standard
    <xref linkend="perl-standard-install"/>.</para>

    &lfs81_checked;

    <itemizedlist>
      <listitem>
        <para>
          <ulink url="&Business-ISSN-download-http;">Business::ISSN-&Business-ISSN-version;</ulink>
        </para>
      </listitem>
      <listitem>
<literallayout>&Business-ISSN-download-http;
MD5 sum: &Business-ISSN-md5sum;</literallayout>
      </listitem>
    </itemizedlist>

    <!-- Capture::Tiny is a dependency of multiple modules on this page
         but it is not linked from other pages, so only give minimal details -->

    <bridgehead renderas="sect3" id="perl-capture-tiny"
    xreflabel="Capture::Tiny">
    Capture::Tiny</bridgehead>

    <indexterm zone="perl-modules perl-capture-tiny">
      <primary sortas="a-Capture-Tiny">Capture::Tiny</primary>
    </indexterm>

    <para>The Capture::Tiny module captures STDOUT and STDERR from Perl, XS
    (eXternal Subroutine, i.e. written in C or C++) or external programs. This
    module uses the standard <xref linkend="perl-standard-install"/>.</para>

    <itemizedlist>
      <listitem>
        <para>
          <literallayout><ulink url="http://search.cpan.org/dist/Capture-Tiny/">Capture::Tiny</ulink>
(http://search.cpan.org/dist/Capture-Tiny/)</literallayout>
        </para>
      </listitem>
    </itemizedlist>

    <!-- Class::Accessor -->
    <bridgehead renderas="sect3" id="perl-class-accessor"
    xreflabel="Class::Accessor-&Class-Accessor-version;">
    Class::Accessor-&Class-Accessor-version;</bridgehead>

    <indexterm zone="perl-modules perl-class-accessor">
      <primary sortas="a-Class-Accessor">Class::Accessor</primary>
    </indexterm>

    <para>This module generators accessors/mutators for your class. It uses
    the standard <xref linkend="perl-standard-install"/>.</para>

    &lfs81_checked;

    <itemizedlist>
      <listitem>
        <para>
          <ulink url="&Class-Accessor-download-http;">Class::Accessor-&Class-Accessor-version;</ulink>
        </para>
      </listitem>
      <listitem>
<literallayout>&Class-Accessor-download-http;
MD5 sum: &Class-Accessor-md5sum;</literallayout>
      </listitem>
    </itemizedlist>

    <!-- Data::Compare -->
    <bridgehead renderas="sect3" id="perl-data-compare"
    xreflabel="Data::Compare-&Data-Compare-version;">
    Data::Compare-&Data-Compare-version;</bridgehead>

    <indexterm zone="perl-modules perl-data-compare">
      <primary sortas="a-Data-Compare">Data::Compare</primary>
    </indexterm>

    <para>The Data::Compare module compares two <application>perl</application>
    data structures. This module and its dependencies use the standard
    <xref linkend="perl-standard-install"/>.</para>

    &lfs81_checked;

    <itemizedlist>
      <listitem>
        <para>
          <ulink url="&Data-Compare-download-http;">Data::Compare-&Data-Compare-version;</ulink>
        </para>
      </listitem>
      <listitem>
<literallayout>&Data-Compare-download-http;
MD5 sum: &Data-Compare-md5sum;</literallayout>
        <itemizedlist>
          <listitem><literallayout><ulink url="http://search.cpan.org/~rclamp/File-Find-Rule/">File::Find::Rule</ulink>
(http://search.cpan.org/~rclamp/File-Find-Rule/)</literallayout>
            <itemizedlist>
              <listitem> <literallayout><ulink url="http://search.cpan.org/dist/Number-Compare/">Number::Compare</ulink>
(http://search.cpan.org/dist/Number-Compare/)</literallayout>
              </listitem>
              <listitem> <literallayout><ulink url="http://search.cpan.org/dist/Text-Glob/">Text::Glob</ulink>
(http://search.cpan.org/dist/Text-Glob/)</literallayout>
              </listitem>
            </itemizedlist>
          </listitem>
        </itemizedlist>
      </listitem>
    </itemizedlist>

    <!-- Data::Dump -->
    <bridgehead renderas="sect3" id="perl-data-dump"
    xreflabel="Data::Dump-&Data-Dump-version;">
    Data::Dump-&Data-Dump-version;</bridgehead>

    <indexterm zone="perl-modules perl-data-dump">
      <primary sortas="a-Data-Dump">Data::Dump</primary>
    </indexterm>

    <para>This module provides pretty printing of data structures. It uses
    the standard <xref linkend="perl-standard-install"/>.</para>

    &lfs81_checked;

    <itemizedlist>
      <listitem>
        <para>
          <ulink url="&Data-Dump-download-http;">Data::Dump-&Data-Dump-version;</ulink>
        </para>
      </listitem>
      <listitem>
<literallayout>&Data-Dump-download-http;
MD5 sum: &Data-Dump-md5sum;</literallayout>
      </listitem>
    </itemizedlist>

    <!-- Data::Uniqid -->
    <bridgehead renderas="sect3" id="perl-data-uniqid"
    xreflabel="Data::Uniqid-&Data-Uniqid-version;">
    Data::Uniqid-&Data-Uniqid-version;</bridgehead>

    <indexterm zone="perl-modules perl-data-uniqid">
      <primary sortas="a-Data-Uniqid">Data::Uniqid</primary>
    </indexterm>

    <para>This module provides three simple routines for generating unique IDs.
    It uses the standard <xref linkend="perl-standard-install"/> but requires
    a patch because one of its tests fails in recent builds.</para>

      <bridgehead renderas="sect4">Additional Download</bridgehead>
      <itemizedlist spacing="compact">
        <listitem>
          <para>
            Required patch:
            <ulink url="&patch-root;/Data-Uniqid-&Data-Uniqid-version;-disable_failing_test-1.patch"/>
          </para>
        </listitem>
      </itemizedlist>

    &lfs81_checked;

    <itemizedlist>
      <listitem>
        <para>
          <ulink url="&Data-Uniqid-download-http;">Data::Uniqid-&Data-Uniqid-version;</ulink>
        </para>
      </listitem>
      <listitem>
<literallayout>&Data-Uniqid-download-http;
MD5 sum: &Data-Uniqid-md5sum;</literallayout>
      </listitem>
    </itemizedlist>

    <!-- DateTime is a dependency of DateTime-Calendar-Julian and DateTime-Format-Builder
         but it is not linked from other pages, so only give minimal details -->

    <bridgehead renderas="sect3" id="perl-datetime"
    xreflabel="DateTime">
    DateTime</bridgehead>

    <indexterm zone="perl-modules perl-datetime">
      <primary sortas="a-DateTime">DateTime</primary>
    </indexterm>

    <para>DateTime provides a date and time object for perl.
    It and its dependencies use the standard
    <xref linkend="perl-standard-install"/> except for those needing
    <xref linkend="perl-module-build"/>, which use
    <xref linkend="perl-build-install"/>.</para>

    &lfs81_checked;

    <itemizedlist>
      <listitem><literallayout><ulink url="http://search.cpan.org/dist/DateTime/">DateTime</ulink>
(http://search.cpan.org/dist/DateTime)</literallayout>
        <itemizedlist>
          <!-- Both DateTime ::Locale and DateTime::TimeZone now need
          namespace::autoclean, Specio and Params::ValidationCompiler.
          The latter needs Specio but only for its testsuite -->

          <listitem><literallayout><ulink url="http://search.cpan.org/dist/CPAN-Meta-Check/">CPAN::Meta::Check</ulink>
(http://search.cpan.org/dist/CPAN-Meta-Check/)</literallayout>
            <itemizedlist> <!-- dep for CPAN-Meta-Check -->
              <listitem><literallayout><ulink url="http://search.cpan.org/dist/Test-Deep/">Test::Deep</ulink>
(http://search.cpan.org/dist/Test-Deep/)</literallayout>
              </listitem>
            </itemizedlist> <!-- end of dep for CPAN-Meta-Check -->
          </listitem>

          <listitem><literallayout><ulink url="http://search.cpan.org/dist/namespace-autoclean/">namespace::autoclean</ulink>
(http://search.cpan.org/dist/namespace-autoclean/)</literallayout>
            <itemizedlist><!-- deps for namespace::autoclean -->
              <listitem><literallayout><ulink url="http://search.cpan.org/dist/B-Hooks-EndOfScope/">B::Hooks::EndOfScope</ulink>
(http://search.cpan.org/dist/B-Hooks-EndOfScope/)</literallayout>
                <itemizedlist><!-- deps for B::Hooks::EndOfScope -->
                  <listitem>
                    <para><xref linkend="perl-module-implementation"/></para>
                  </listitem>
                  <listitem><literallayout><ulink url="http://search.cpan.org/dist/Sub-Exporter-Progressive/">Sub::Exporter::Progressive</ulink>
(http://search.cpan.org/dist/Sub-Exporter-Progressive/)</literallayout>
                  </listitem>
                  <listitem><literallayout><ulink url="http://search.cpan.org/dist/Variable-Magic/">Variable::Magic</ulink>
(http://search.cpan.org/dist/Variable-Magic/)</literallayout>
                  </listitem>
                </itemizedlist><!-- end of deps for B::Hooks::EndOfScope -->
              </listitem>
              <listitem>
                <para><xref linkend="perl-sub-identify"/></para>
              </listitem>
              <listitem><literallayout><ulink url="http://search.cpan.org/dist/namespace-clean/">namespace::clean</ulink>
(http://search.cpan.org/dist/namespace-clean/)</literallayout>
                <itemizedlist> <!-- deps of namespace-clean -->
                  <listitem><literallayout><ulink url="http://search.cpan.org/dist/Package-Stash/">Package::Stash</ulink>
(http://search.cpan.org/dist/Package-Stash/)</literallayout>
                    <itemizedlist><!-- deps of Package-Stash -->
                      <listitem> <literallayout><ulink url="http://search.cpan.org/dist/Dist-CheckConflicts/">Dist::CheckConflicts</ulink>
(http://search.cpan.org/dist/Dist-CheckConflicts/)</literallayout>
                        <!-- Module-Runtime, Test-Fatal pulled in by Module-Implementation -->
                      </listitem>
                      <listitem><literallayout><ulink url="http://search.cpan.org/dist/Package-Stash-XS/">Package::Stash::XS</ulink>
(http://search .cpan.org/dist/Package-Stash-XS/)</literallayout>
                      <!-- Test-Fatal is pulled in by Module-Implementation for B-Hooks... above -->
                        <itemizedlist> <!-- deps of Package-Stash-XS -->
                           <listitem>
                             <para>
                               <xref linkend="perl-test-requires"/>
                               (for the testsuite)
                             </para>
                           </listitem>
                        </itemizedlist> <!-- end of deps for Package-Stash-XS -->
                      </listitem>
                    </itemizedlist> <!-- end of deps for Package-Stash -->
                  </listitem>
                </itemizedlist>
              </listitem>
            </itemizedlist> <!-- end of deps for namespace::autoclean -->
           </listitem>

          <!-- Specio::Library::Builtins and Specio::Library::String both come from Specio -->
          <listitem><literallayout><ulink url="http://search.cpan.org/dist/Specio/">Specio</ulink>
(http://search.cpan.org/dist/Specio/)</literallayout>
            <itemizedlist><!--- deps for Specio -->
              <listitem><literallayout><ulink url="http://search.cpan.org/dist/Devel-StackTrace/">Devel::StackTrace</ulink>
(http://search.cpan.org/dist/Devel-StackTrace/)</literallayout>
              </listitem>
              <listitem><literallayout><ulink url="http://search.cpan.org/dist/Eval-Closure/">Eval::Closure</ulink>
(http://search.cpan.org/dist/Eval-Closure/)</literallayout>
              </listitem>
              <listitem><literallayout><ulink url="http://search.cpan.org/dist/MRO-Compat/">MRO::Compat</ulink>
(http://search.cpan.org/dist/MRO-Compat/)</literallayout>
              </listitem>
              <!-- Role::Tiny::Compat is part of Role::Tiny -->
              <listitem><literallayout><ulink url="http://search.cpan.org/dist/Role-Tiny/">Role::Tiny</ulink>
(http://search.cpan.org/dist/Role-Tiny/)</literallayout>
              </listitem>
              <!-- Test::Fatal is pulled in to test Dist::CheckConflicts -->
              <listitem>
                <para>
                  <xref linkend="perl-test-needs"/>
                </para>
              </listitem>
              <listitem><literallayout><ulink url="http://search.cpan.org/dist/Sub-Quote/">Sub::Quote</ulink>
(http://search.cpan.org/dist/Sub-Quote/) (for the testsuite)</literallayout>
                <itemizedlist>
                  <listitem>
                    <para>
                      <xref linkend="perl-test-fatal"/> (for the testsuite)
                    </para>
                  </listitem>
                </itemizedlist>
              </listitem>
            </itemizedlist> <!-- end of Specio deps -->
          </listitem>

          <!-- Params::ValidationCompiler needs Specio for its testsuite -->
          <listitem><literallayout><ulink url="http://search.cpan.org/dist/Params-ValidationCompiler/">Params::ValidationCompiler</ulink>
(http://search.cpan.org/dist/Params-ValidationCompiler/)</literallayout>
            <itemizedlist><!--- deps for Params::ValidationCompiler -->
              <!-- Eval::Closure was built for Specio -->
              <listitem><literallayout><ulink url="http://search.cpan.org/dist/Exception-Class/">Exception::Class</ulink>
(http://search.cpan.org/dist/Exception-Class/)</literallayout>
                <itemizedlist><!-- deps for Exception::Class - DevelStackTrace was built for Specio -->
                  <listitem><literallayout><ulink url="http://search.cpan.org/dist/Class-Data-Inheritable/">Class::Data::Inheritable</ulink>
(http://search.cpan.org/dist/Class-Data-Inheritable/)</literallayout>
                  </listitem>
                </itemizedlist> <!-- end of deps for Exception::Class -->
              </listitem>

              <!-- Test2::Plugin::NoWarnings -->
              <listitem><literallayout><ulink url="http://search.cpan.org/dist/Test2-Plugin-NoWarnings/">Test2::Plugin::NoWarnings</ulink>
(http://search.cpan.org/dist/Test2-Plugin-NoWarnings/) (for the testsuite)</literallayout>
                <itemizedlist>
                  <!-- Test2::Bundle::Extended and Test2::Require::Module are from Test2-Suite -->
                  <listitem><literallayout><ulink url="http://search.cpan.org/dist/Test2-Suite/">Test2::Suite</ulink>
(http://search.cpan.org/dist/Test2-Suite/)</literallayout>
                    <itemizedlist> <!-- deps for Test2::Suite -->
                      <listitem><literallayout><ulink url="http://search.cpan.org/dist/Importer/">Importer</ulink>
(http://search.cpan.org/dist/Importer/)
(this is a core module, but a newer version is needed)</literallayout>
                      </listitem>
                      <!-- Test2 is part of Test::Simple -->
                      <listitem><literallayout><ulink url="http://search.cpan.org/dist/Test-Simple/">Test::Simple</ulink>
(http://search.cpan.org/dist/Test-Simple/)</literallayout>
                      </listitem>
                      <!-- Sub::Info --> <!-- needs Test2 and Importer -->
                      <listitem><literallayout><ulink url="http://search.cpan.org/dist/Sub-Info/">Sub::Info</ulink>
(http://search.cpan.org/dist/Sub-Info/)</literallayout>
                      </listitem>
                      <!-- Term::Table --> <!-- needs Test2 and Importer -->
                      <listitem><literallayout><ulink url="http://search.cpan.org/dist/Term-Table/">Term::Table</ulink>
(http://search.cpan.org/dist/Term-Table/)</literallayout>
                      </listitem>
                    </itemizedlist> <!-- end of deps for Test2::Suite -->
                  </listitem>
                </itemizedlist> <!-- end of deps for Test2::Plugin::NoWarnings -->
              </listitem>
              <!-- Test::Without::Module -->
              <listitem><literallayout><ulink url="http://search.cpan.org/dist/Test-Without-Module/">Test::Without::Module</ulink>
(http://search.cpan.org/dist/Test-Without-Module/)</literallayout>
              </listitem>
            </itemizedlist> <!-- end of Params::ValidationCompiler deps -->
          </listitem>

          <!-- DateTime::Locale -->
          <listitem><literallayout><ulink url="http://search.cpan.org/dist/DateTime-Locale/">DateTime::Locale</ulink>
(http://search.cpan.org/dist/DateTime-Locale/)</literallayout>
            <itemizedlist>
              <!-- deps for DateTime::Locale mostly pulled in for DateTime above -->
              <listitem><literallayout><ulink url="http://search.cpan.org/dist/File-ShareDir-Install/">File::ShareDir::Install</ulink>
(http://search.cpan.org/dist/File-ShareDir-Install/)</literallayout>
                <itemizedlist><!-- deps for File::ShareDir::Install -->
                  <listitem><literallayout><ulink url="http://search.cpan.org/dist/Module-Build-Tiny/">Module::Build::Tiny</ulink>
(http://search.cpan.org/dist/Module-Build-Tiny/)</literallayout>
                    <itemizedlist>
                      <listitem><literallayout><ulink url="http://search.cpan.org/dist/ExtUtils-Config/">ExtUtils::Config</ulink>
(http://search.cpan.org/dist/Extutils-Config)</literallayout>
                      </listitem>
                      <listitem><literallayout><ulink url="http://search.cpan.org/dist/ExtUtils-Helpers/">ExtUtils::Helpers</ulink>
(http://search.cpan.org/dist/Extutils-Helpers)</literallayout>
                      </listitem>
                      <listitem><literallayout><ulink url="http://search.cpan.org/dist/ExtUtils-InstallPaths/">ExtUtils::InstallPaths</ulink>
(http://search.cpan.org/dist/Extutils-InstallPaths)</literallayout>
                      </listitem>
                      <listitem>
                        <para>
                          <xref linkend="perl-module-build"/>
                        </para>
                      </listitem>
                    </itemizedlist>
                  </listitem>
                </itemizedlist>
              </listitem>
              <listitem>
                <para>
                  <xref linkend="perl-scalar-list-utils"/>
                </para>
              </listitem>
              <listitem><literallayout><ulink url="http://search.cpan.org/dist/File-ShareDir/">File::ShareDir</ulink>
(http://search.cpan.org/dist/File-ShareDir) (for the testsuite)</literallayout>
                <itemizedlist><!-- File-ShareDir deps apart from File::ShareDir:Install (above) -->
                  <listitem><literallayout><ulink url="http://search.cpan.org/dist/Class-Inspector/">Class::Inspector</ulink>
(http://search.cpan.org/dist/Class-Inspector)</literallayout>
                  </listitem>
                </itemizedlist>
              </listitem>
              <listitem><literallayout><ulink url="http://search.cpan.org/dist/Test-File-ShareDir/">Test::File::ShareDir</ulink>
(http://search.cpan.org/dist/Test-File-ShareDir) (for the testsuite)</literallayout>
                <itemizedlist><!-- Test-File-ShareDir deps  -->
                  <listitem><literallayout><ulink url="http://search.cpan.org/dist/Class-Tiny/">Class::Tiny</ulink>
(http://search.cpan.org/dist/Class-Tiny)</literallayout>
                  </listitem>
                  <listitem><literallayout><ulink url="http://search.cpan.org/dist/File-Copy-Recursive/">File::Copy::Recursive</ulink>
(http://search.cpan.org/dist/File-Copy-Recursive)</literallayout>
                  </listitem>
                  <listitem><literallayout><ulink url="http://search.cpan.org/dist/Path-Tiny/">Path::Tiny</ulink>
(http://search.cpan.org/dist/Path-Tiny)</literallayout>
                  </listitem>
                  <listitem><literallayout><ulink url="http://search.cpan.org/dist/Scope-Guard/">Scope::Guard</ulink>
(http://search.cpan.org/dist/Scope-Guard)</literallayout>
                  </listitem>
                  <listitem>
                    <para>
                      <xref linkend="perl-test-fatal"/>
                    </para>
                  </listitem>
                </itemizedlist>
              </listitem>
              <listitem>
                <para>
                  <xref linkend="perl-test-warnings"/> (for the testsuite)
                </para>
              </listitem>
            </itemizedlist> <!-- end of deps for DateTime::Locale -->
          </listitem>

          <!-- DateTime::TimeZone -->
          <listitem>
              <literallayout><ulink url="http://search.cpan.org/dist/DateTime-TimeZone/">DateTime::TimeZone</ulink>
(http://search.cpan.org/dist/DateTime-TimeZone/)</literallayout>
            <itemizedlist> <!-- deps for DateTime::timeZone -->
              <listitem><literallayout><ulink url="http://search.cpan.org/dist/Class-Singleton/">Class::Singleton</ulink>
(http://search.cpan.org/dist/Class-Singleton/)</literallayout>
              </listitem>
              <!-- Module::Runtime is pulled in by Dist::CheckConflicts -->

              <listitem>
                <para><xref linkend="perl-try-tiny"/></para>
              </listitem>
            </itemizedlist> <!-- end of deps for DateTime::TimeZone -->
          </listitem>
          <!--  Test::Fatal pulled in for Dist-CheckConflicts -->
          <!--  Test::Warnings pulled in for DateTime::Locale -->
        </itemizedlist> <!-- end of deps for DateTime -->
      </listitem>
    </itemizedlist>

    <!-- DateTime::Calendar::Julian -->
    <bridgehead renderas="sect3" id="perl-datetime-calendar-julian"
    xreflabel="DateTime::Calendar::Julian-&DateTime-Calendar-Julian-version;">
    DateTime::Calendar::Julian-&DateTime-Calendar-Julian-version;</bridgehead>

    <indexterm zone="perl-modules perl-datetime-calendar-julian">
      <primary sortas="a-DateTime-Calendar-Julian">DateTime::Calendar::Julian</primary>
    </indexterm>

    <para>DateTime::Calendar::Julian implements the Julian Calendar. This
    module and its dependencies use the standard
    <xref linkend="perl-standard-install"/> except for those needing
    <xref linkend="perl-module-build"/>, which use
    <xref linkend="perl-build-install"/>.</para>

    &lfs81_checked;

    <itemizedlist>
      <listitem>
        <para>
          <ulink url="&DateTime-Calendar-Julian-download-http;">DateTime::Calendar::Julian-&DateTime-Calendar-Julian-version;</ulink>
        </para>
      </listitem>
      <listitem>
<literallayout>&DateTime-Calendar-Julian-download-http;
MD5 sum: &DateTime-Calendar-Julian-md5sum;</literallayout>
        <itemizedlist>
          <listitem>
            <para><xref linkend="perl-datetime"/></para>
          </listitem>
        </itemizedlist>
      </listitem>
    </itemizedlist>

    <!-- DateTime::Format::Builder -->
    <bridgehead renderas="sect3" id="perl-datetime-format-builder"
    xreflabel="DateTime::Format::Builder-&DateTime-Format-Builder-version;">
    DateTime::Format::Builder-&DateTime-Format-Builder-version;</bridgehead>

    <indexterm zone="perl-modules perl-datetime-format-builder">
      <primary sortas="a-DateTime-Format-Builder">DateTime::Format::Builder</primary>
    </indexterm>

    <para>DateTime::Format::Builder creates DateTime parser classes and objects.
    This module and its dependencies use the standard
    <xref linkend="perl-standard-install"/> except for those needing
    <xref linkend="perl-module-build"/>, which use
    <xref linkend="perl-build-install"/>.</para>

    &lfs81_checked;

    <itemizedlist>
      <listitem>
        <para>
          <ulink url="&DateTime-Format-Builder-download-http;">DateTime::Format::Builder-&DateTime-Format-Builder-version;</ulink>
        </para>
      </listitem>
      <listitem>
<literallayout>&DateTime-Format-Builder-download-http;
MD5 sum: &DateTime-Format-Builder-md5sum;</literallayout>
        <itemizedlist>
          <listitem><literallayout><ulink url="http://search.cpan.org/dist/Class-Factory-Util/">Class::Factory::Util</ulink>
(http://search.cpan.org/dist/Class-Factory-Util/)</literallayout>
            <itemizedlist>
              <listitem>
                <para><xref linkend="perl-module-build"/></para>
              </listitem>
            </itemizedlist>
          </listitem>
          <listitem>
            <para><xref linkend="perl-datetime"/></para>
          </listitem>
          <listitem><literallayout><ulink url="http://search.cpan.org/dist/DateTime-Format-Strptime/">DateTime::Format::Strptime</ulink>
(http://search.cpan.org/dist/DateTime-Format-Strptime/)</literallayout>
            <itemizedlist> <!-- deps of DateTime-Format-Strptime -->
              <listitem><literallayout><ulink url="http://search.cpan.org/dist/Package-DeprecationManager/">Package::DeprecationManager</ulink>
(http://search.cpan.org/dist/Package-DeprecationManager/)</literallayout>
                <itemizedlist> <!-- deps of Package-DeprecationManager -->
                  <!-- Package::Stash is p ulled in by DateTime -->
                  <listitem><literallayout><ulink url="http://search.cpan.org/dist/Params-Util/">Params::Util</ulink>
(http://search.cpan.org/dist/Params-Util/)</literallayout>
                  </listitem>
                  <listitem><literallayout><ulink url="http://search.cpan.org/dist/Sub-Install/">Sub::Install</ulink>
(http://search.cpan.org/dist/Sub-Install/)</literallayout>
                  </listitem>
                  <listitem><literallayout><ulink url="http://search.cpan.org/dist/Sub-Name/">Sub::Name</ulink>
(http://search.cpan.org/dist/Sub-Name/)</literallayout>
                  </listitem>
                </itemizedlist> <!-- end of deps for Package-DeprecationManager -->
              </listitem>
              <!-- Module::Implementation and Test::Fatal are pulled in by DateTime -->
            </itemizedlist> <!-- end of deps for DateT ime-Format-Strptime -->
          </listitem>
          <!-- Test-Fatal and Test-Warnings pulled in by DateTime -->
        </itemizedlist>
      </listitem>
      <!-- Params-Validate -->
      <listitem><literallayout><ulink url="http://search.cpan.org/dist/Params-Validate/">Params::Validate</ulink>
(http::/search.cpan.org/dist/Params-Validate/) - uses <xref linkend="perl-build-install"/></literallayout>
         <!-- deps for Params::Validate:
         Module::Build is a dep of Module::Implementation via Module::Runtime,
         pulled in by Package::Stash in namespace::clean for
         namespace::autoclean in DateTime, and for testsuites Test::Fatal is
         pulled in for Dist::CheckConflicts for Package::Stash, and
         Test::Requires by Package::Stash::XS for Package::Stash -->
      </listitem>
    </itemizedlist>

    <!-- Encode::EUCJPASCII -->
    <bridgehead renderas="sect3" id="perl-encode-eucjpascii"
    xreflabel="Encode::EUCJPASCII-&Encode-EUCJPASCII-version;">
    Encode::EUCJPASCII-&Encode-EUCJPASCII-version;</bridgehead>

    <indexterm zone="perl-modules perl-encode-eucjpascii">
      <primary sortas="a-Encode-EUCJPASCII">Encode::EUCJPASCII</primary>
    </indexterm>

    <para>Encode::EUCJPASCII provides an eucJP-open (Extended Unix Code,
    Japanese) mapping. This module uses the
    standard <xref linkend="perl-standard-install"/>.</para>

    &lfs81_checked;

    <itemizedlist>
      <listitem>
        <para>
          <ulink url="&Encode-EUCJPASCII-download-http;">Encode::EUCJPASCII-&Encode-EUCJPASCII-version;</ulink>
        </para>
      </listitem>
      <listitem>
<literallayout>&Encode-EUCJPASCII-download-http;
MD5 sum: &Encode-EUCJPASCII-md5sum;</literallayout>
      </listitem>
    </itemizedlist>

    <!-- Encode::HanExtra -->
    <bridgehead renderas="sect3" id="perl-encode-hanextra"
    xreflabel="Encode::HanExtra-&Encode-HanExtra-version;">
    Encode::HanExtra-&Encode-HanExtra-version;</bridgehead>

    <indexterm zone="perl-modules perl-encode-hanextra">
      <primary sortas="a-Encode-HanExtra">Encode::HanExtra</primary>
    </indexterm>

    <para>The Encode::HanExtra module provides extra sets of Chinese Encodings.
    This module uses the 'unsafe' variant of the standard
    <xref linkend="perl-standard-install"/>.</para>

    &lfs81_checked;

    <itemizedlist>
      <listitem>
        <para>
          <ulink url="&Encode-HanExtra-download-http;">Encode::HanExtra-&Encode-HanExtra-version;</ulink>
        </para>
      </listitem>
      <listitem>
<literallayout>&Encode-HanExtra-download-http;
MD5 sum: &Encode-HanExtra-md5sum;</literallayout>
      </listitem>
    </itemizedlist>

    <!-- Encode::JIS2K -->
    <bridgehead renderas="sect3" id="perl-encode-jis2k"
    xreflabel="Encode::JIS2K-&Encode-JIS2K-version;">
    Encode::JIS2K-&Encode-JIS2K-version;</bridgehead>

    <indexterm zone="perl-modules perl-encode-jis2k">
      <primary sortas="a-Encode-JIS2K">Encode::JIS2K</primary>
    </indexterm>

    <para>The Encode::JIS2K module provides JIS X 0212 (aka JIS 2000)
    Encodings. This module uses the standard
    <xref linkend="perl-standard-install"/>.</para>

    &lfs81_checked;

    <itemizedlist>
      <listitem>
        <para>
          <ulink url="&Encode-JIS2K-download-http;">Encode::JIS2K-&Encode-JIS2K-version;</ulink>
        </para>
      </listitem>
      <listitem>
<literallayout>&Encode-JIS2K-download-http;
MD5 sum: &Encode-JIS2K-md5sum;</literallayout>
      </listitem>
    </itemizedlist>

    <!-- Error -->
    <bridgehead renderas="sect3" id="perl-error"
    xreflabel="Error-&Error-version;">
    Error-&Error-version;</bridgehead>

    <indexterm zone="perl-modules perl-error">
      <primary sortas="a-Error">Error</primary>
    </indexterm>

    <para>The Error module provides Error/exception handling in an
    object-oriented way. This module uses the standard
    <xref linkend="perl-standard-install"/>.</para>

    &lfs81_checked;

    <itemizedlist>
      <listitem>
        <para>
          <ulink url="&Error-download-http;">Error-&Error-version;</ulink>
        </para>
      </listitem>
      <listitem>
<literallayout>&Error-download-http;
MD5 sum: &Error-md5sum;</literallayout>
      </listitem>
    </itemizedlist>

   <!-- File::BaseDir -->
    <bridgehead renderas="sect3" id="perl-file-basedir"
    xreflabel="File::BaseDir-&File-BaseDir-version;">
    File::BaseDir-&File-BaseDir-version;</bridgehead>

    <indexterm zone="perl-modules perl-file-basedir">
      <primary sortas="a-File-BaseDir">File::BaseDir</primary>
    </indexterm>

    <para>The File::BaseDir module compares two <application>perl</application>
    data structures. This module and its dependencies use the standard
    <xref linkend="perl-standard-install"/>.</para>

    &lfs81_checked;

    <itemizedlist>
      <listitem>
        <para>
          <ulink url="&File-BaseDir-download-http;">File::BaseDir-&File-BaseDir-version;</ulink>
        </para>
      </listitem>
      <listitem>
<literallayout>&File-BaseDir-download-http;
MD5 sum: &File-BaseDir-md5sum;</literallayout>
        <itemizedlist>
          <listitem>
            <para><xref linkend="perl-module-build"/></para>
          </listitem>
          <listitem>
            <para><xref linkend="perl-file-which"/></para>
          </listitem>
          <listitem>
            <para><literallayout><ulink url="http://search.cpan.org/~pjf/IPC-System-Simple/">IPC::System::Simple</ulink>
(http://search.cpan.org/~pjf/IPC-System-Simple/)</literallayout></para>
          </listitem>
        </itemizedlist>
      </listitem>
    </itemizedlist>

    <!-- File::Slurp -->
    <bridgehead renderas="sect3" id="perl-file-slurp"
    xreflabel="File::Slurp-&File-Slurp-version;">
    File::Slurp-&File-Slurp-version;</bridgehead>

    <indexterm zone="perl-modules perl-file-slurp">
      <primary sortas="a-File-Slurp">File::Slurp</primary>
    </indexterm>

    <para>The File::Slurp module provides Simple and Efficient
    Reading/Writing/Modifying of Complete Files.  This module uses the standard
    <xref linkend="perl-standard-install"/>.</para>

    &lfs81_checked;

    <itemizedlist>
      <listitem>
        <para>
          <ulink url="&File-Slurp-download-http;">File::Slurp-&File-Slurp-version;</ulink>
        </para>
      </listitem>
      <listitem>
<literallayout>&File-Slurp-download-http;
MD5 sum: &File-Slurp-md5sum;</literallayout>
      </listitem>
    </itemizedlist>

    <!-- File::Which -->
    <bridgehead renderas="sect3" id="perl-file-which"
    xreflabel="File::Which-&File-Which-version;">
    File::Which-&File-Which-version;</bridgehead>

    <indexterm zone="perl-modules perl-file-which">
      <primary sortas="a-File-Which">File::Which</primary>
    </indexterm>

    <para>File::Which provides a portable implementation of the
    &apos;which&apos; utility. This module and its dependencies use the standard
    <xref linkend="perl-standard-install"/>.</para>

    &lfs81_checked;

    <itemizedlist>
      <listitem>
        <para>
          <ulink url="&File-Which-download-http;">
          File::Which-&File-Which-version;</ulink>
        </para>
      </listitem>
      <listitem>
<literallayout>&File-Which-download-http;
MD5 sum: &File-Which-md5sum;</literallayout>
      </listitem>
    </itemizedlist>

    <!-- HTML::Parser -->
    <bridgehead renderas="sect3" id="perl-html-parser"
    xreflabel="HTML::Parser-&HTML-Parser-version;">
    HTML::Parser-&HTML-Parser-version;</bridgehead>

    <indexterm zone="perl-modules perl-html-parser">
      <primary sortas="a-HTML-Parser">HTML::Parser</primary>
    </indexterm>

    <para>The HTML::Parser distribution is a collection of modules that parse
    and extract information from HTML documents. This module and the dependency
    modules use the standard
    <xref linkend="perl-standard-install"/>.</para>

    &lfs81_checked;

    <itemizedlist>
      <listitem>
        <para>
          <ulink url="&HTML-Parser-download-http;">HTML::Parser-&HTML-Parser-version;</ulink>
        </para>
      </listitem>
      <listitem>
<literallayout>&HTML-Parser-download-http;
MD5 sum: &HTML-Parser-md5sum;</literallayout>
        <itemizedlist>
          <listitem><literallayout><ulink url="http://search.cpan.org/~petdance/HTML-Tagset/">HTML::Tagset</ulink>
(http://search.cpan.org/~petdance/HTML-Tagset/)</literallayout>
          </listitem>
          <listitem>
            <para>
              <xref linkend="perl-lwp"/> (circular; howevever, it can
              be installed after HTML::Parser as it is only a run-time
              requirement for the included HTML::HeadParser module)
            </para>
          </listitem>
        </itemizedlist>
      </listitem>
    </itemizedlist>

    <!-- IPC::Run3 -->
    <bridgehead renderas="sect3" id="perl-ipc-run3"
    xreflabel="IPC::Run3-&IPC-Run3-version;">
    IPC::Run3-&IPC-Run3-version;</bridgehead>

    <indexterm zone="perl-modules perl-ipc-run3">
      <primary sortas="a-IPC-Run3">IPC::Run3</primary>
    </indexterm>

    <para>The IPC::Run3 module is used to run a subprocess with input/ouput
    redirection.  This module uses the standard
    <xref linkend="perl-standard-install"/>.</para>

    &lfs81_checked;

    <itemizedlist>
      <listitem>
        <para>
          <ulink url="&IPC-Run3-download-http;">IPC::Run3-&IPC-Run3-version;</ulink>
        </para>
      </listitem>
      <listitem>
<literallayout>&IPC-Run3-download-http;
MD5 sum: &IPC-Run3-md5sum;</literallayout>
      </listitem>
    </itemizedlist>

    <!-- LWP (but listed as libwww-perl) -->
    <bridgehead renderas="sect3" id="perl-lwp"
    xreflabel="libwww-perl-&LWP-version;">
    libwww-perl-&LWP-version; (a.k.a. Bundle::LWP)</bridgehead>

    <indexterm zone="perl-modules perl-lwp">
      <primary sortas="a-libwww-perl">libwww-perl</primary>
    </indexterm>

    <para>The libwww-perl (Bundle::LWP) collection is a set of
    <application>Perl</application> modules which provide a simple and
    consistent application programming interface to the World-Wide Web. The
    main focus of the library is to provide classes and functions that allow
    you to write WWW clients. The library also contains modules that are of
    more general use and even classes that help you implement simple HTTP
    servers. The LWP collection and all its dependency modules use the standard
    <xref linkend="perl-standard-install"/>. The dependencies should be
    installed in the order listed below. Ensure you install the dependency
    chain for each module before installing the modules.</para>

    &lfs81_checked;

    <itemizedlist>
      <listitem>
        <para>
          <ulink url="&libwww-perl-download-http;">libwww-perl-&LWP-version;</ulink>
        </para>
      </listitem>
      <listitem>
<literallayout>&libwww-perl-download-http;
MD5 sum: &libwww-perl-md5sum;</literallayout>
        <itemizedlist>
          <listitem> <literallayout><ulink url="http://search.cpan.org/~gaas/Encode-Locale/">Encode::Locale</ulink>
(http://search.cpan.org/~gaas/Encode-Locale/) </literallayout>
          </listitem>
          <listitem> <literallayout><ulink url="http://search.cpan.org/~gaas/HTML-Form/">HTML::Form</ulink>
(http://search.cpan.org/~gaas/HTML-Form/) </literallayout>
            <itemizedlist>
              <listitem>
                <para>
                  <xref linkend="perl-uri"/>
                </para>
              </listitem>
              <listitem>
                <para>
                  <xref linkend="perl-html-parser"/>
                </para>
              </listitem>
              <listitem><literallayout><ulink url="http://search.cpan.org/~gaas/HTTP-Message/">HTTP::Message</ulink>
(http://search.cpan.org/~gaas/HTTP-Message/)</literallayout>
                <itemizedlist><listitem><literallayout><ulink url="http://search.cpan.org/~gaas/HTTP-Date/">HTTP::Date</ulink>
(http://search.cpan.org/~gaas/HTTP-Date/)</literallayout>
                  </listitem>
                  <listitem><literallayout> <ulink url="http://search.cpan.org/~cjm/IO-HTML/">IO::HTML</ulink>
(http://search.cpan.org/~cjm/IO-HTML/)</literallayout>
                  </listitem>
                  <listitem><literallayout><ulink url="http://search.cpan.org/~gaas/LWP-MediaTypes/">LWP::MediaTypes</ulink>
(http://search.cpan.org/~gaas/LWP-MediaTypes/)</literallayout>
                  </listitem>
                  <listitem>
                    <para>
                      <xref linkend="perl-try-tiny"/> (for the testsuite)
                    </para>
                  </listitem>
                </itemizedlist>
              </listitem>
            </itemizedlist>
          </listitem>
          <listitem><literallayout><ulink url="http://search.cpan.org/~gaas/HTTP-Cookies/">HTTP::Cookies</ulink>
(http://search.cpan.org/~gaas/HTTP-Cookies/)</literallayout>
          </listitem>
          <listitem><literallayout><ulink url="http://search.cpan.org/~gaas/HTTP-Negotiate/">HTTP::Negotiate</ulink>
(http://search.cpan.org/~gaas/HTTP-Negotiate/)</literallayout>
          </listitem>
          <listitem><literallayout><ulink url="http://search.cpan.org/~gaas/Net-HTTP/">Net::HTTP</ulink>
(http://search.cpan.org/~gaas/Net-HTTP/)</literallayout>
          </listitem>
          <listitem><literallayout><ulink url="http://search.cpan.org/~gaas/WWW-RobotRules/">WWW::RobotRules</ulink>
(http://search.cpan.org/~gaas/WWW-RobotRules/)</literallayout>
          </listitem>
          <listitem><literallayout><ulink url="http://search.cpan.org/~gaas/HTTP-Daemon/">HTTP::Daemon</ulink>
(http://search.cpan.org/~gaas/HTTP-Daemon/)</literallayout>
          </listitem>
          <listitem><literallayout><ulink url="http://search.cpan.org/~gaas/File-Listing/">File::Listing</ulink>
(http://search.cpan.org/~gaas/File-Listing/)</literallayout>
          </listitem>
          <listitem><literallayout><ulink url="http://search.cpan.org/~mallen/Test-RequiresInternet/">Test::RequiresInternet</ulink> (for the testsuite)
(http://search.cpan.org/~mallen/Test-RequiresInternet/)</literallayout>
          </listitem>
          <listitem>
            <para>
              <xref linkend="perl-test-fatal"/> (for the testsuite)
            </para>
          </listitem>
        </itemizedlist>
      </listitem>
    </itemizedlist>

    <para>After the LWP installation, if you want HTTPS protocol support,
    install <xref linkend="perl-lwp-protocol-https"/></para>

    <!-- Lingua-Translit -->
    <bridgehead renderas="sect3" id="perl-lingua-translit"
    xreflabel="Lingua::Translit-&Lingua-Translit-version;">
    Lingua::Translit-&Lingua-Translit-version; (Lingua::Translit)</bridgehead>

    <indexterm zone="perl-modules perl-lingua-translit">
      <primary sortas="a-Lingua-Translit">Lingua::Translit</primary>
    </indexterm>

    <para>
      Lingua::Translit and its <command>translit</command> program transliterate
      text between writing systems. This module uses the standard
      <xref linkend="perl-standard-install"/>.
    </para>

    &lfs81_checked;

    <itemizedlist>
      <listitem>
        <para>
          <ulink url="&Lingua-Translit-download-http;">Lingua::Translit-&Lingua-Translit-version;</ulink>
        </para>
      </listitem>
      <listitem>
<literallayout>&Lingua-Translit-download-http;
MD5 sum: &Lingua-Translit-md5sum;</literallayout>
      </listitem>
    </itemizedlist>

    <!-- List::AllUtils -->
    <bridgehead renderas="sect3" id="perl-list-allutils"
    xreflabel="List::AllUtils-&List-AllUtils-version;">
    List::AllUtils-&List-AllUtils-version;</bridgehead>

    <indexterm zone="perl-modules perl-list-allutils">
      <primary sortas="a-List-AllUtils">List::AllUtils</primary>
    </indexterm>

    <para>The List::Allutils module combines List::Util and List::MoreUtils in
    one bite-sized package. This module and its dependencies use the standard
    <xref linkend="perl-standard-install"/>.</para>

    &lfs81_checked;

    <itemizedlist>
      <listitem>
        <para>
          <ulink url="&List-AllUtils-download-http;">List::AllUtils-&List-AllUtils-version;</ulink>
        </para>
      </listitem>
      <listitem>
<literallayout>&List-AllUtils-download-http;
MD5 sum: &List-AllUtils-md5sum;</literallayout>
        <itemizedlist>
          <listitem> <literallayout><ulink url="http://search.cpan.org/dist/List-SomeUtils/">List::SomeUtils</ulink>
(http://search.cpan.org/dist/List-SomeUtils/) (for the testsuite)</literallayout>
            <itemizedlist>
              <listitem> <literallayout><ulink url="http://search.cpan.org/dist/List-SomeUtils-XS/">List::SomeUtils::XS</ulink>
(http://search.cpan.org/dist/List-SomeUtils::XS/)</literallayout>
                <itemizedlist>
                  <listitem> <literallayout><ulink url="http://search.cpan.org/dist/Test-LeakTrace/">Test::LeakTrace</ulink>
(http://search.cpan.org/dist/Test-LeakTrace/) (for the testsuite) - this uses the 'unsafe' variant of the Standard Installation</literallayout>
                  </listitem>
                </itemizedlist>
              </listitem>
              <listitem>
                <para>
                  <xref linkend="perl-module-implementation"/>
                </para>
              </listitem>
            </itemizedlist>
          </listitem>
          <listitem> <literallayout><ulink url="http://search.cpan.org/dist/List-UtilsBy/">List::UtilsBy</ulink>
(http://search.cpan.org/dist/List-UtilsBy/)</literallayout>
          </listitem>
          <listitem> <literallayout><ulink url="http://search.cpan.org/dist/Number-Compare/">Number::Compare</ulink>
(http://search.cpan.org/dist/Number-Compare/)</literallayout>
          </listitem>
          <listitem>
                <para>
                  <xref linkend="perl-scalar-list-utils"/>
                </para>
          </listitem>
          <listitem>
            <para>
              <xref linkend="perl-test-warnings"/> (for the testsuite)
            </para>
          </listitem>
          <listitem> <literallayout><ulink url="http://search.cpan.org/dist/Text-Glob/">Text::Glob</ulink>
(http://search.cpan.org/dist/Text-Glob/)</literallayout>
          </listitem>
        </itemizedlist>
      </listitem>
    </itemizedlist>

    <!-- List::MoreUtils -->
    <bridgehead renderas="sect3" id="perl-list-moreutils"
    xreflabel="List::MoreUtils-&List-MoreUtils-version;">
    List::MoreUtils-&List-MoreUtils-version;</bridgehead>

    <indexterm zone="perl-modules perl-list-moreutils">
      <primary sortas="a-List-MoreUtils">List::MoreUtils</primary>
    </indexterm>

    <para>List::MoreUtils provides the stuff missing in List::Util. This
    module uses the standard <xref linkend="perl-standard-install"/>.</para>

    &lfs81_checked;

    <itemizedlist>
      <listitem>
        <para>
          <ulink url="&List-MoreUtils-download-http;">List::MoreUtils-&List-MoreUtils-version;</ulink>
        </para>
      </listitem>
      <listitem>
<literallayout>&List-MoreUtils-download-http;
MD5 sum: &List-MoreUtils-md5sum;</literallayout>
<!--      </listitem>
      <listitem>-->
        <itemizedlist>
          <listitem> <literallayout><ulink url="http://search.cpan.org/dist/XSLoader/">XSLoader</ulink>
(http://search.cpan.org/dist/XSLoader/)
<!-- List::MoreUtils-0.416 needs 0.22 or newer -->
XSLoader is a core perl module, but the version in perl-5.24.1 is not new enough.</literallayout>
          </listitem>
          <listitem> <literallayout><ulink url="http://search.cpan.org/dist/Exporter-Tiny/">Exporter::Tiny</ulink>
(http://search.cpan.org/dist/Exporter-Tiny/) (for the testsuite)</literallayout>
          </listitem>
        </itemizedlist>
      </listitem>
    </itemizedlist>


    <!-- Log::Log4perl -->
    <bridgehead renderas="sect3" id="perl-log-log4perl"
    xreflabel="Log::Log4perl-&Log-Log4perl-version;">
    Log::Log4perl-&Log-Log4perl-version;</bridgehead>

    <indexterm zone="perl-modules perl-log-log4perl">
      <primary sortas="a-Log-Log4perl">Log::Log4perl</primary>
    </indexterm>

    <para>Log::Log4perl provides a Log4j implementation for
    <application>perl</application>. This module uses the
    standard <xref linkend="perl-standard-install"/>.</para>

    &lfs81_checked;

    <itemizedlist>
      <listitem>
        <para>
          <ulink url="&Log-Log4perl-download-http;">Log::Log4perl-&Log-Log4perl-version;</ulink>
        </para>
      </listitem>
      <listitem>
<literallayout>&Log-Log4perl-download-http;
MD5 sum: &Log-Log4perl-md5sum;</literallayout>
      </listitem>
    </itemizedlist>

    <!-- LWP::Protocol::https -->
    <bridgehead renderas="sect3" id="perl-lwp-protocol-https"
    xreflabel="LWP::Protocol::https-&LWP-Protocol-https-version;">
    LWP::Protocol::https-&LWP-Protocol-https-version;</bridgehead>

    <indexterm zone="perl-modules perl-lwp-protocol-https">
      <primary sortas="a-LWP-Protocol-https">LWP::Protocol::https</primary>
    </indexterm>

    <para>LWP::Protocol::https provides https support for
    LWP::UserAgent (i.e. for LWP). This module uses the
    standard <xref linkend="perl-standard-install"/>.</para>

    &lfs81_checked;

    <itemizedlist>
      <listitem>
        <para>
          <ulink url="&LWP-Protocol-https-download-http;">LWP::Protocol::https-&LWP-Protocol-https-version;</ulink>
        </para>
      </listitem>
      <listitem>
<literallayout>&LWP-Protocol-https-download-http;
MD5 sum: &LWP-Protocol-https-md5sum;</literallayout>
<!--      </listitem>
      <listitem>-->
        <itemizedlist>
          <listitem>
            <para><xref linkend="openssl"/></para>
          </listitem>
          <listitem>
            <para><xref linkend="perl-lwp"/></para>
          </listitem>

<!--      <listitem>
            <itemizedlist> -->
          <listitem><literallayout><ulink url="http://search.cpan.org/~behroozi/IO-Socket-SSL/">IO::Socket::SSL</ulink>
(http://search.cpan.org/~behroozi/IO-Socket-SSL/)</literallayout>
            <itemizedlist>
              <listitem><literallayout><ulink url="http://search.cpan.org/dist/Net-SSLeay/">Net::SSLeay</ulink>
(http://search.cpan.org/dist/Net-SSLeay/)
When scripting, pipe the <command>perl Makefile.PL</command> command through <command>yes "" |</command>, since some user input is sought</literallayout>
              </listitem>
            </itemizedlist>
          </listitem>

<!--        </itemizedlist>
              </listitem> -->
          <listitem><literallayout><ulink url="http://search.cpan.org/~abh/Mozilla-CA/">Mozilla::CA</ulink>
(http://search.cpan.org/~abh/Mozilla-CA/)</literallayout>
           </listitem>

<!--            </itemizedlist>
          </listitem> -->
        </itemizedlist>
      </listitem>
    </itemizedlist>

    <!-- Module::Build -->
    <bridgehead renderas="sect3" id="perl-module-build"
    xreflabel="Module::Build-&Module-Build-version;">
    Module::Build-&Module-Build-version;</bridgehead>

    <indexterm zone="perl-modules perl-module-build">
      <primary sortas="a-Module-Build">Module-Build</primary>
    </indexterm>

    <para>
      Module::Build allows perl modules to be built without a
      <command>make</command> command being present. This module uses the
      standard <xref linkend="perl-standard-install"/>.
   </para>

    <note>
      <para>
        When creating the Makefile, this module will report
<literallayout>inc_bundling_support....disabled
  requires:
    ! inc::latest is not installed</literallayout>
        but inc::latest is experimental and not needed.
      </para>
    </note>

    &lfs81_checked;

    <itemizedlist>
      <listitem>
        <para>
          <ulink url="&Module-Build-download-http;">Module::Build-&Module-Build-version;</ulink>
        </para>
      </listitem>
      <listitem>
<literallayout>&Module-Build-download-http;
MD5 sum: &Module-Build-md5sum;</literallayout>
      </listitem>
    </itemizedlist>

    <!-- Module::Implementation is a dependency of multiple modules on this page
         but it is not linked from other pages, so only give minimal details -->

    <bridgehead renderas="sect3" id="perl-module-implementation"
    xreflabel="Module::Implementation">
    Module::Implementation</bridgehead>

    <indexterm zone="perl-modules perl-module-implementation">
      <primary sortas="a-Module-Implementation">Module::Implementation</primary>
    </indexterm>

    <para>Module::Implementation loads one of several alternate underlying
    implementation of a module (e.g. eXternal Subroutine or pure Perl, or an
    implementation for a given OS). This module and its dependencies use the
    standard
    <xref linkend="perl-standard-install"/> except for those needing
    <xref linkend="perl-module-build"/>, which use
    <xref linkend="perl-build-install"/>.</para>

    &lfs81_checked;

    <itemizedlist>
      <listitem> <literallayout><ulink url="http://search.cpan.org/dist/Module-Implementation/">Module::Implementation</ulink>
(http://search.cpan.org/dist/Module-Implementation)</literallayout>
        <itemizedlist>
          <listitem>
            <para>
              <xref linkend="perl-module-runtime"/>
            </para>
          </listitem>
          <listitem>
            <para>
              <xref linkend="perl-try-tiny"/>
            </para>
          </listitem>
          <listitem>
            <para>
              <xref linkend="perl-test-fatal"/> (for the testsuite)
            </para>
          </listitem>
          <listitem>
            <para>
              <xref linkend="perl-test-requires"/> (for the testsuite)
            </para>
          </listitem>
        </itemizedlist>
      </listitem>
    </itemizedlist>

    <!-- Module::Runtime is a dependency of multiple modules on this page
         but it is not linked from other pages, so only give minimal details -->

    <bridgehead renderas="sect3" id="perl-module-runtime"
    xreflabel="Module::Runtime">
    Module::Runtime</bridgehead>

    <indexterm zone="perl-modules perl-module-runtime">
      <primary sortas="a-Module-Runtime">Module::Runtime</primary>
    </indexterm>

    <para>Module::Runtime provides functions to deal with runtime
     handling of Perl modules. This module itself uses the standard
    <xref linkend="perl-standard-install"/>.</para>

    &lfs81_checked;

    <itemizedlist>
      <listitem> <literallayout><ulink url="http://search.cpan.org/dist/Module-Runtime/">Module::Runtime</ulink>
(http://search.cpan.org/dist/Module-Runtime/)</literallayout>
        <itemizedlist>
          <listitem>
            <para>
              <xref linkend="perl-module-build"/>
            </para>
          </listitem>
        </itemizedlist>
      </listitem>
    </itemizedlist>

    <!-- Net::DNS -->
    <bridgehead renderas="sect3" id="perl-net-dns"
    xreflabel="Net::DNS-&Net-DNS-version;">
    Net::DNS-&Net-DNS-version;</bridgehead>

    <indexterm zone="perl-modules perl-net-dns">
      <primary sortas="a-Net-DNS">Net::DNS</primary>
    </indexterm>

    <para>Net::DNS is a DNS resolver implemented in
    <application>Perl</application>. It can be used to perform nearly any type
    of DNS query from a <application>Perl</application> script. The Net::DNS
    module and all its dependencies are installed using the standard
    <xref linkend="perl-standard-install"/>.</para>

    &lfs81_checked;

    <itemizedlist>
      <listitem>
        <para>
          <ulink url="&Net-DNS-download-http;">Net::DNS-&Net-DNS-version;</ulink>
        </para>
      </listitem>
      <listitem>
<literallayout>&Net-DNS-download-http;
MD5 sum: &Net-DNS-md5sum;</literallayout>
        <itemizedlist>
          <listitem><literallayout><ulink url="http://search.cpan.org/~gaas/Digest-HMAC/">Digest::HMAC</ulink>
(http://search.cpan.org/~gaas/Digest-HMAC/) (for the testsuite)</literallayout>
          </listitem>
          <listitem><literallayout><ulink url="http://search.cpan.org/~shlomif/IO-Socket-INET6-2.72/">IO::Socket::INET6</ulink>
(http://search.cpan.org/~shlomif/IO-Socket-INET6-2.72/) (required for IPv6 support)</literallayout>
            <itemizedlist>
              <listitem><literallayout><ulink url="http://search.cpan.org/~umemoto/Socket6/">Socket6</ulink>
(http://search.cpan.org/~umemoto/Socket6/)</literallayout>
              </listitem>
            </itemizedlist>
          </listitem>
          <listitem><literallayout><ulink url="http://search.cpan.org/~gbarr/IO/">IO</ulink>
(http://search.cpan.org/~gbarr/IO/)
(for the IO::Socket module, which is a core module, but whose version is too old in 5.24.1)</literallayout>
          </listitem>
        </itemizedlist>
      </listitem>
    </itemizedlist>

    <!-- Parse::Yapp -->
    <bridgehead renderas="sect3" id="perl-parse-yapp"
    xreflabel="Parse::Yapp-&Parse-Yapp-version;">
    Parse::Yapp-&Parse-Yapp-version;</bridgehead>

    <indexterm zone="perl-modules perl-parse-yapp">
      <primary sortas="a-Parse-Yapp">Parse::Yapp</primary>
    </indexterm>

    <para>Parse::Yapp is a Perl extension for generating and using LALR
    parsers.. This module uses the standard
    <xref linkend="perl-standard-install"/>.</para>

    &lfs81_checked;

    <itemizedlist>
      <listitem>
        <para>
          <ulink url="&Parse-Yapp-download-http;">Parse::Yapp-&Parse-Yapp-version;</ulink>
        </para>
      </listitem>
      <listitem>
<literallayout>&Parse-Yapp-download-http;
MD5 sum: &Parse-Yapp-md5sum;</literallayout>
      </listitem>
    </itemizedlist>

    <!-- Regexp::Common -->
    <bridgehead renderas="sect3" id="perl-regexp-common"
    xreflabel="Regexp::Common-&Regexp-Common-version;">
    Regexp::Common-&Regexp-Common-version;</bridgehead>

    <indexterm zone="perl-modules perl-regexp-common">
      <primary sortas="a-Regexp-Common">Regexp::Common</primary>
    </indexterm>

    <para>Regexp::Common provides commonly requested regular expressions. This
    module uses the standard <xref linkend="perl-standard-install"/>.</para>

    &lfs81_checked;

    <itemizedlist>
      <listitem>
        <para>
          <ulink url="&Regexp-Common-download-http;">Regexp::Common-&Regexp-Common-version;</ulink>
        </para>
      </listitem>
      <listitem>
<literallayout>&Regexp-Common-download-http;
MD5 sum: &Regexp-Common-md5sum;</literallayout>
      </listitem>
    </itemizedlist>

    <!-- Scalar::List::Utils is a dependency of multiple modules on this page
         but it is not linked from other pages, so only give minimal details -->

    <bridgehead renderas="sect3" id="perl-scalar-list-utils"
    xreflabel="Scalar::List::Utils">
    Scalar::List::Utils</bridgehead>

    <indexterm zone="perl-modules perl-scalar-list-utils">
      <primary sortas="a-Scalar-List-Utils">Scalar::List::Utils</primary>
    </indexterm>

    <para>Scalar::List::Utils provides a selection of list and
    scalar subroutines.
     <!-- separate lines for next sentences, comment out / renable as necessary -->
    This is a core module, but the version in perl-5.24.1 is not new
    enough for the packages which link to this module.  If you are using
    perl-5.26.0, the version included in that is adequate.
    This module uses the standard
    <xref linkend="perl-standard-install"/>.</para>

    <!-- Can't really check this for lfs 8.1 since it is included in perl-5.26.0
    &lfs8 0_checked;
    -->

    <itemizedlist>
      <listitem>
        <para>
          <literallayout><ulink url="http://search.cpan.org/dist/Scalar-List-Utils/">Scalar::List::Utils</ulink>
(http://search.cpan.org/dist/Scalar-List-Utils/)</literallayout>
        </para>
      </listitem>
    </itemizedlist>

    <!-- SGMLSpm -->
    <bridgehead renderas="sect3" id="perl-sgmlspm"
    xreflabel="SGMLSpm-&SGMLSpm-version;">
    SGMLSpm-&SGMLSpm-version;</bridgehead>

    <indexterm zone="perl-modules perl-sgmlspm">
      <primary sortas="a-SGMLSpm">SGMLSpm</primary>
    </indexterm>

    <para>The SGMLSpm module is a <application>Perl</application> library
      used for parsing the output from James Clark's SGMLS and NSGMLS
      parsers. This modules uses the standard
    <xref linkend="perl-standard-install"/>.</para>

    &lfs81_checked;

    <para> Before beginning the build, issue
      the following command to prevent an error:</para>

<screen><userinput>chmod -v 644 MYMETA.yml</userinput></screen>

    <para>
      After the package has been installed, run the following command
      as the <systemitem class="username">root</systemitem> user:
    </para>

<screen role="root"><userinput>ln -sv sgmlspl.pl /usr/bin/sgmlspl</userinput></screen>

    <itemizedlist>
      <listitem>
        <para>
          <ulink url="&SGMLSpm-download-http;">SGMLSpm-&SGMLSpm-version;</ulink>
        </para>
      </listitem>
      <listitem>
<literallayout>&SGMLSpm-download-http;
MD5 sum: &SGMLSpm-md5sum;</literallayout>
<!--http://search.cpan.org/CPAN/authors/id/R/RA/RAAB/SGMLSpm-&SGMLSpm-version;.tar.gz -->
      </listitem>
    </itemizedlist>

    <!-- Sort::Key -->
    <bridgehead renderas="sect3" id="perl-sort-key"
    xreflabel="Sort::Key-&Sort-Key-version;">
    Sort::Key-&Sort-Key-version;</bridgehead>

    <indexterm zone="perl-modules perl-sort-key">
      <primary sortas="a-Sort-Key">Sort::Key</primary>
    </indexterm>

    <para>Sort::Key provides a set of functions to sort lists of values by some
    calculated key value. This module uses the standard <xref
    linkend="perl-standard-install"/>.</para>

    &lfs81_checked;

    <itemizedlist>
      <listitem>
        <para>
          <ulink url="&Sort-Key-download-http;">Sort::Key-&Sort-Key-version;</ulink>
        </para>
      </listitem>
      <listitem>
<literallayout>&Sort-Key-download-http;
MD5 sum: &Sort-Key-md5sum;</literallayout>
      </listitem>
    </itemizedlist>

    <!-- Sub::Identify is a dependency of multiple modules on this page
         but it is not linked from other pages, so only give minimal details -->

    <bridgehead renderas="sect3" id="perl-sub-identify"
    xreflabel="Sub::Identify">
    Sub::Identify</bridgehead>

    <indexterm zone="perl-modules perl-sub-identify">
      <primary sortas="a-Sub-Identify">Sub::Identify</primary>
    </indexterm>

    <para>Sub::Identify allows you to retrieve the real names of code
    references. It uses the standard <xref
    linkend="perl-standard-install"/>.</para>

    &lfs81_checked;

    <itemizedlist>
      <listitem>
        <para>
          <literallayout><ulink url="http://search.cpan.org/dist/Sub-Identify/">Sub::Identify</ulink>
(http://search.cpan.org/dist/Sub-Identify/)</literallayout>
        </para>
      </listitem>
    </itemizedlist>

    <!-- Test-Command -->
    <bridgehead renderas="sect3" id="perl-test-command"
    xreflabel="Test::Command-&Test-Command-version;">
    Test::Command-&Test-Command-version;</bridgehead>

    <indexterm zone="perl-modules perl-test-command">
      <primary sortas="a-Test-Command">Test::Command</primary>
    </indexterm>

    <para>
      This module tests the exit status, STDOUT, or STDERR, of an external
      command. This module uses the standard
      <xref linkend="perl-standard-install"/>.
    </para>

    &lfs81_checked;

    <itemizedlist>
      <listitem>
        <para>
          <ulink url="&Test-Command-download-http;">Test::Command-&Test-Command-version;</ulink>
        </para>
      </listitem>
      <listitem>
<literallayout>&Test-Command-download-http;
MD5 sum: &Test-Command-md5sum;</literallayout>
      </listitem>
    </itemizedlist>

    <!-- Test::Differences -->
    <bridgehead renderas="sect3" id="perl-test-differences"
    xreflabel="Test::Differences-&Test-Differences-version;">
    Test::Differences-&Test-Differences-version;</bridgehead>

    <indexterm zone="perl-modules perl-test-differences">
      <primary sortas="a-Test-Differences">Test::Differences</primary>
    </indexterm>

    <para>Test::Differences - Test strings and data structures and show
    differences if not ok. This module and its dependency modules use the
    standard <xref linkend="perl-standard-install"/>.</para>

    &lfs81_checked;

    <itemizedlist>
      <listitem>
        <para>
          <ulink url="&Test-Differences-download-http;">Test::Differences-&Test-Differences-version;</ulink>
        </para>
      </listitem>
      <listitem>
<literallayout>&Test-Differences-download-http;
MD5 sum: &Test-Differences-md5sum;</literallayout>
        <itemizedlist>
          <listitem><literallayout><ulink url="http://search.cpan.org/~ovid/Text-Diff/">Text::Diff (for the testsuite)</ulink>
(http://search.cpan.org/~ovid/Text-Diff/)</literallayout>
            <itemizedlist>
              <listitem><literallayout><ulink url="http://search.cpan.org/~tyemq/Algorithm-Diff/">Algorithm::Diff (for the testsuite)</ulink>
(http://search.cpan.org/~tyemq/Algorithm-Diff/)</literallayout>
              </listitem>
            </itemizedlist>
          </listitem>
          <listitem>
            <para><xref linkend="perl-capture-tiny"/></para>
          </listitem>
        </itemizedlist>
      </listitem>
    </itemizedlist>

    <!-- Test::Fatal is a dependency of multiple modules on this page
         but it is not linked from other pages, so only give minimal details -->

    <bridgehead renderas="sect3" id="perl-test-fatal"
    xreflabel="Test::Fatal">
    Test::Fatal</bridgehead>

    <indexterm zone="perl-modules perl-test-fatal">
      <primary sortas="a-Test-Fatal">Test::Fatal</primary>
    </indexterm>

    <para>The Test::Fatal module provides simple helpers for testing
    code which throws exceptions. This module uses the standard
    <xref linkend="perl-standard-install"/>.</para>

    &lfs81_checked;

    <itemizedlist>
      <listitem><literallayout><ulink url="http://search.cpan.org/dist/Test-Fatal/">Test::Fatal</ulink>
(http://search.cpan.org/dist/Test-Fatal/)</literallayout>
        <itemizedlist>
          <listitem>
            <para>
              <xref linkend="perl-try-tiny"/>
            </para>
          </listitem>
        </itemizedlist>
      </listitem>
    </itemizedlist>

    <!-- Test::Needs is a dependency of multiple modules on this page
         but it is not linked from other pages, so only give minimal details -->

    <bridgehead renderas="sect3" id="perl-test-needs"
    xreflabel="Test::Needs">
    Test::Needs</bridgehead>

    <indexterm zone="perl-modules perl-test-needs">
      <primary sortas="a-Test-Needs">Test::Needs</primary>
    </indexterm>

    <para>The Test::Needs module skips tests when a module is not available.</para>

    &lfs81_checked;

    <itemizedlist>
      <listitem>
        <para>
          <literallayout><ulink url="http://search.cpan.org/dist/Test-Needs/">Test::Needs</ulink>
(http://search.cpan.org/dist/Test-Needs/)</literallayout>
        </para>
      </listitem>
    </itemizedlist>

    <!-- Test::Requires is a dependency of multiple modules on this page
         but it is not linked from other pages, so only give minimal details -->

    <bridgehead renderas="sect3" id="perl-test-requires"
    xreflabel="Test::Requires">
    Test::Requires</bridgehead>

    <indexterm zone="perl-modules perl-test-requires">
      <primary sortas="a-Test-Requires">Test::Requires</primary>
    </indexterm>

    <para>The Test::Requires module checks if another (optional) module
    can be loaded, and if not it skips all the current tests. This
    module uses the standard <xref linkend="perl-standard-install"/>.</para>

    &lfs81_checked;

    <itemizedlist>
      <listitem>
        <para>
          <literallayout><ulink url="http://search.cpan.org/dist/Test-Requires/">Test::Requires</ulink>
(http://search.cpan.org/dist/Test-Requires/)</literallayout>
        </para>
      </listitem>
    </itemizedlist>

    <!-- Test::Warnings is a dependency of multiple modules on this page
         but it is not linked from other pages, so only give minimal details -->

    <bridgehead renderas="sect3" id="perl-test-warnings"
    xreflabel="Test::Warnings">
    Test::Warnings</bridgehead>

    <indexterm zone="perl-modules perl-test-warnings">
      <primary sortas="a-Test-Warnings">Test::Warnings</primary>
    </indexterm>

    <para>The Test::Warnings module tests for warnings
    and the lack of them. This module uses the standard
    <xref linkend="perl-standard-install"/>.</para>

    &lfs81_checked;

    <itemizedlist>
      <listitem>
        <para>
          <literallayout><ulink url="http://search.cpan.org/dist/Test-Warnings/">Test::Warnings</ulink>
(http://search.cpan.org/dist/Test-Warnings/)</literallayout>
        </para>
      </listitem>
    </itemizedlist>

    <!-- Text::BibTeX -->
    <bridgehead renderas="sect3" id="perl-text-bibtex"
    xreflabel="Text::BibTeX-&Text-BibTeX-version;">
    Text::BibTeX-&Text-BibTeX-version;</bridgehead>

    <indexterm zone="perl-modules perl-text-bibtex">
      <primary sortas="a-Text-BibTeX">Text::BibTex</primary>
    </indexterm>

    <para>Text::BibTeX provides an interface to read and parse
    <application>BibTeX</application> files. This module uses the
    <xref linkend="perl-build-install"/>, but except where noted,
    its dependencies are installed using the standard
    <xref linkend="perl-standard-install"/>.</para>

    &lfs81_checked;

    <itemizedlist>
      <listitem>
        <para>
          <ulink url="&Text-BibTeX-download-http;">Text::BibTeX-&Text-BibTeX-version;</ulink>
        </para>
      </listitem>
      <listitem>
<literallayout>&Text-BibTeX-download-http;
MD5 sum: &Text-BibTeX-md5sum;</literallayout>
        <itemizedlist>
          <listitem><literallayout><ulink url="http://search.cpan.org/dist/Config-AutoConf/">Config::AutoConf</ulink>
(http://search.cpan.org/dist/Config-AutoConf/)</literallayout>
            <itemizedlist>
              <listitem>
                <para><xref linkend="perl-capture-tiny"/></para>
              </listitem>
            </itemizedlist>
          </listitem>
          <listitem><literallayout><ulink url="http://search.cpan.org/dist/ExtUtils-LibBuilder/">ExtUtils-LibBuilder</ulink>
(http://search.cpan.org/dist/LibBuilder/)
this uses the <xref linkend="perl-build-install"/></literallayout>
            <itemizedlist>
              <listitem>
                <para>
                  <xref linkend="perl-module-build"/>
                </para>
              </listitem>
            </itemizedlist>
          </listitem>
        </itemizedlist>
      </listitem>
    </itemizedlist>

    <!-- Text::CSV -->
    <bridgehead renderas="sect3" id="perl-text-csv"
    xreflabel="Text::CSV-&Text-CSV-version;">
    Text::CSV-&Text-CSV-version;</bridgehead>

    <indexterm zone="perl-modules perl-text-csv">
      <primary sortas="a-Text-CSV">Text::CSV</primary>
    </indexterm>

    <para>Text::CSV is a comma-separated values manipulator, using XS
    (eXternal Subroutine - for subroutines written in C or C++) or
    pure perl.  This module uses the standard
    <xref linkend="perl-standard-install"/>.</para>

    &lfs81_checked;

    <itemizedlist>
      <listitem>
        <para>
          <ulink url="&Text-CSV-download-http;">Text::CSV-&Text-CSV-version;</ulink>
        </para>
      </listitem>
      <listitem>
<literallayout>&Text-CSV-download-http;
MD5 sum: &Text-CSV-md5sum;</literallayout>
        <itemizedlist>
          <listitem><literallayout><ulink url="http://search.cpan.org/dist/Text-CSV_XS/">Text::CSV_XS</ulink>
(http://search.cpan.org/dist/Text-CSV_XS/)</literallayout>
            <para>
              This is <emphasis>Recommended</emphasis> by Text-CSV but
              <emphasis>Required</emphasis> for <xref linkend="biber"/>.
            </para>
            <note>
              <para>
                GNU tar dislikes <filename>Text-CSV_XS-1.26.tar.gz</filename>
                and reports it does not look like a tar file : decompress it
                with <command>gunzip</command> before extracting it.
              </para>
            </note>
          </listitem>
        </itemizedlist>
      </listitem>
    </itemizedlist>

    <!-- Text::Roman -->
    <bridgehead renderas="sect3" id="perl-text-roman"
    xreflabel="Text::Roman-&Text-Roman-version;">
    Text::Roman-&Text-Roman-version;</bridgehead>

    <indexterm zone="perl-modules perl-text-roman">
      <primary sortas="a-Text-Roman">Text::Roman</primary>
    </indexterm>

    <para>
      Text::Roman allows conversion between Roman and Arabic algorisms (number
      systems, e.g. MCMXLV and 1945). This module uses the standard
      <xref linkend="perl-standard-install"/>.
    </para>

    &lfs81_checked;

    <itemizedlist>
      <listitem>
        <para>
          <ulink url="&Text-Roman-download-http;">Text::Roman-&Text-Roman-version;</ulink>
        </para>
      </listitem>
      <listitem>
<literallayout>&Text-Roman-download-http;
MD5 sum: &Text-Roman-md5sum;</literallayout>
      </listitem>
    </itemizedlist>

    <!-- Try::Tiny is a dependency of multiple modules on this page
         but it is not linked from other pages, so only give minimal details -->

    <bridgehead renderas="sect3" id="perl-try-tiny"
    xreflabel="Try::Tiny">
    Try::Tiny</bridgehead>

    <indexterm zone="perl-modules perl-try-tiny">
      <primary sortas="a-Try-Tiny">Try::Tiny</primary>
    </indexterm>

    <para>The Try::Tiny module provides minimal try/catch with
    proper preservation of $0.  This module uses the standard
    <xref linkend="perl-standard-install"/>.</para>

    &lfs81_checked;

    <itemizedlist>
      <listitem>
        <para>
          <literallayout><ulink url="http://search.cpan.org/dist/Try-Tiny/">Try::Tiny</ulink>
(http://search.cpan.org/dist/Try-Tiny/)</literallayout>
        </para>
      </listitem>
    </itemizedlist>

    <!-- Unicode::Collate -->
    <bridgehead renderas="sect3" id="perl-unicode-collate"
    xreflabel="Unicode::Collate-&Unicode-Collate-version;">
    Unicode::Collate-&Unicode-Collate-version;</bridgehead>

    <indexterm zone="perl-modules perl-unicode-collate">
      <primary sortas="a-Unicode-Collate">Unicode::Collate</primary>
    </indexterm>

    <para>
      Unicode::Collate provides a Unicode collation algorithm.
      This module uses the 'unsafe' variant of the standard
      <xref linkend="perl-standard-install"/>.
    </para>

    &lfs81_checked;

    <itemizedlist>
      <listitem>
        <para>
          <ulink url="&Unicode-Collate-download-http;">Unicode::Collate-&Unicode-Collate-version;</ulink>
        </para>
      </listitem>
      <listitem>
<literallayout>&Unicode-Collate-download-http;
MD5 sum: &Unicode-Collate-md5sum;</literallayout>
      </listitem>
    </itemizedlist>

    <!-- Unicode::LineBreak -->
    <bridgehead renderas="sect3" id="perl-unicode-linebreak"
    xreflabel="Unicode::LineBreak-&Unicode-LineBreak-version;">
    Unicode::LineBreak-&Unicode-LineBreak-version;</bridgehead>

    <indexterm zone="perl-modules perl-unicode-linebreak">
      <primary sortas="a-Unicode-LineBreak">Unicode::LineBreak</primary>
    </indexterm>

    <para>Unicode::LineBreak provides a UAX #14 Unicode Line Breaking Algorithm.
    This module and its dependencies use the standard
    <xref linkend="perl-standard-install"/>.</para>

    &lfs81_checked;

    <itemizedlist>
      <listitem>
        <para>
          <ulink url="&Unicode-LineBreak-download-http;">Unicode::LineBreak-&Unicode-LineBreak-version;</ulink>
        </para>
      </listitem>
      <listitem>
<literallayout>&Unicode-LineBreak-download-http;
MD5 sum: &Unicode-LineBreak-md5sum;</literallayout>
        <itemizedlist>
          <listitem><literallayout><ulink url="http://search.cpan.org/dist/MIME-Charset/">MIME::Charset</ulink>
(http://search.cpan.org/dist/MIME-Charset/)
When scripting, pipe the <command>perl Makefile.PL</command> command through <command>yes "" |</command>, since some user input is sought</literallayout>
          </listitem>
          <listitem>
            <para>
              <xref linkend="wget"/> (to download two files from unicode.org
              in the testsuite)
            </para>
          </listitem>
        </itemizedlist>
      </listitem>
    </itemizedlist>

    <!-- URI -->
    <bridgehead renderas="sect3" id="perl-uri"
    xreflabel="URI-&URI-version;">
    URI-&URI-version;</bridgehead>

    <indexterm zone="perl-modules perl-uri">
      <primary sortas="a-URI">URI</primary>
    </indexterm>

    <para>
      This module implements the URI class. Objects of this class represent
      "Uniform Resource Identifier references" as specified in RFC 2396 (and
      updated by RFC 2732). A Uniform Resource Identifier is a compact string of
      characters that identifies an abstract or physical resource. A Uniform
      Resource Identifier can be further classified as either a Uniform Resource
      Locator (URL) or a Uniform Resource Name (URN). The distinction between
      URL and URN does not matter to the URI class interface. A "URI-reference"
      is a URI that may have additional information attached in the form of a
      fragment identifier. This module uses the standard
      <xref linkend="perl-standard-install"/>.
    </para>

    &lfs81_checked;

    <itemizedlist>
      <listitem>
        <para>
          <ulink url="&URI-download-http;">URI-&URI-version;</ulink>
        </para>
      </listitem>
      <listitem>
<literallayout>&URI-download-http;
MD5 sum: &URI-md5sum;</literallayout>
        <itemizedlist>
          <listitem>
            <para>
              <xref linkend="perl-test-needs"/> (for the testsuite)
            </para>
          </listitem>
        </itemizedlist>
      </listitem>
    </itemizedlist>

    <!-- XML::LibXML is a dependency of multiple modules on this page
         but it is not linked from other pages, so only give minimal details -->

    <bridgehead renderas="sect3" id="perl-xml-libxml"
    xreflabel="XML::LibXML">
    XML::LibXML</bridgehead>

    <indexterm zone="perl-modules perl-xml-libxml">
      <primary sortas="a-XML-LibXML">XML::LibXML</primary>
    </indexterm>

    <para>The XML::LibXML is a perl binding for <xref linkend="libxml2"/>.
    This module uses the standard <xref linkend="perl-standard-install"/>.
    </para>

    <para>Upstream blacklists the current version of <xref linkend="libxml2"/>
    on the grounds of "schema regression" and the build will warn that the
    version of libxml2 is incompatible, but it appears to work.</para>

    &lfs81_checked;

    <itemizedlist>
      <listitem>
        <para>
          <literallayout><ulink url="http://search.cpan.org/dist/XML-LibXML/">XML::LibXML</ulink>
(http://search.cpan.org/dist/XML-LibXML/)</literallayout>
        </para>
        <itemizedlist>
          <listitem>
            <para><xref linkend="perl-xml-sax"/></para>
          </listitem>
          <listitem>
            <para><xref linkend="libxml2"/></para>
          </listitem>
        </itemizedlist>
      </listitem>
    </itemizedlist>

    <!-- XML::LibXML::Simple -->
    <bridgehead renderas="sect3" id="perl-xml-libxml-simple"
    xreflabel="XML::LibXML::Simple-&XML-LibXML-Simple-version;">
    XML::LibXML::Simple-&XML-LibXML-Simple-version;</bridgehead>

    <indexterm zone="perl-modules perl-xml-libxml-simple">
      <primary sortas="a-XML-LibXML-Simple">XML::LibXML::Simple</primary>
    </indexterm>

    <para>The XML::LibXML::Simple module is a rewrite of XML::Simple to use the
    XML::LibXML parser for XML structures,instead of the plain
    <application>Perl</application> or SAX parsers.
    This module and all dependency modules use the standard
    <xref linkend="perl-standard-install"/>.</para>

    &lfs81_checked;

    <itemizedlist>
      <listitem>
        <para>
          <ulink url="&XML-LibXML-Simple-download-http;">XML::LibXML::Simple-&XML-LibXML-Simple-version;</ulink>
        </para>
      </listitem>
      <listitem>
<literallayout>&XML-LibXML-Simple-download-http;
MD5 sum: &XML-LibXML-Simple-md5sum;</literallayout>
        <itemizedlist>
          <listitem>
            <para>
              <xref linkend="perl-xml-libxml"/>
            </para>
          </listitem>
          <listitem><literallayout><ulink url="http://search.cpan.org/dist/File-Slurp-Tiny/">File::Slurp::Tiny</ulink>
(http://search.cpan.org/dist/File-Slurp-Tiny/)</literallayout>
          </listitem>
        </itemizedlist>
      </listitem>
    </itemizedlist>

    <!-- XML::LibXSLT -->
    <bridgehead renderas="sect3" id="perl-xml-libxslt"
    xreflabel="XML::LibXSLT-&XML-LibXSLT-version;">
    XML::LibXSLT-&XML-LibXSLT-version;</bridgehead>

    <indexterm zone="perl-modules perl-xml-libxslt">
      <primary sortas="a-XML-LibXSLT">XML::LibXSLT</primary>
    </indexterm>

    <para>The XML::LibXSLT module provides an interface to
    <application>libxslt</application>. This module uses the standard
    <xref linkend="perl-standard-install"/>.</para>

    &lfs81_checked;

    <itemizedlist>
      <listitem>
        <para>
          <ulink url="&XML-LibXSLT-download-http;">XML::LibXSLT-&XML-LibXSLT-version;</ulink>
        </para>
      </listitem>
      <listitem>
<literallayout>&XML-LibXSLT-download-http;
MD5 sum: &XML-LibXSLT-md5sum;</literallayout>
        <itemizedlist>
          <listitem>
            <para>
              <xref linkend="libxslt"/>
            </para>
          </listitem>
        </itemizedlist>
      </listitem>
    </itemizedlist>

    <!-- XML::SAX is a dependency of multiple modules on this page
         but it is not linked from other pages, so only give minimal details -->

    <bridgehead renderas="sect3" id="perl-xml-sax"
    xreflabel="XML::SAX">
    XML::SAX</bridgehead>

    <indexterm zone="perl-modules perl-xml-sax">
      <primary sortas="a-XML-SAX">XML::SAX</primary>
    </indexterm>

    <para>XML::SAX provides a simple API for XML.
    This module uses the standard <xref linkend="perl-standard-install"/>.
    </para>

    <para>Note: this module does not support parallel builds.</para>

    &lfs81_checked;

    <itemizedlist>
      <listitem>
        <para>
          <literallayout><ulink url="http://search.cpan.org/dist/XML-SAX/">XML::SAX</ulink>
(http://search.cpan.org/dist/XML-SAX/)</literallayout>
        </para>
        <itemizedlist>
          <listitem>
            <para><xref linkend="libxml2"/></para>
          </listitem>
          <listitem><literallayout><ulink url="http://search.cpan.org/~perigrin/XML-NamespaceSupport/">XML::NamespaceSupport</ulink>
(http://search.cpan.org/~perigrin/XML-NamespaceSupport/)</literallayout>
          </listitem>
          <listitem><literallayout><ulink url="http://search.cpan.org/~grantm/XML-SAX-Base/">XML::SAX::Base</ulink>
(http://search.cpan.org/~grantm/XML-SAX-Base/)</literallayout>
          </listitem>
        </itemizedlist>
      </listitem>
    </itemizedlist>

    <!-- XML::Simple -->
    <bridgehead renderas="sect3" id="perl-xml-simple"
    xreflabel="XML::Simple-&XML-Simple-version;">
    XML::Simple-&XML-Simple-version;</bridgehead>

    <indexterm zone="perl-modules perl-xml-simple">
      <primary sortas="a-XML-Simple">XML::Simple</primary>
    </indexterm>

    <para>The XML::Simple module is a <application>Perl</application> extension
    that provides an easy API to read and write XML (especially config files).
    This module and all dependency modules use the standard
    <xref linkend="perl-standard-install"/>.</para>

    &lfs81_checked;

    <itemizedlist>
      <listitem>
        <para>
          <ulink url="&XML-Simple-download-http;">XML::Simple-&XML-Simple-version;</ulink>
        </para>
      </listitem>
      <listitem>
<literallayout>&XML-Simple-download-http;
MD5 sum: &XML-Simple-md5sum;</literallayout>
        <itemizedlist>
          <listitem>
            <para><xref linkend="perl-xml-sax"/></para>
          </listitem>
          <listitem> <literallayout><ulink url="http://search.cpan.org/~bjoern/XML-SAX-Expat/">XML::SAX::Expat</ulink>
(http://search.cpan.org/~bjoern/XML-SAX-Expat/)
(Note: this package does not support parallel build)</literallayout>
          </listitem>
          <listitem>
            <para>
              <xref linkend="perl-xml-libxml"/> (recommended for faster parsing)
            </para>
          </listitem>
          <listitem><literallayout><ulink url="http://search.cpan.org/~chorny/Tie-IxHash/">Tie::IxHash</ulink>
(http://search.cpan.org/~chorny/Tie-IxHash/)
(optionally used in the test suite)</literallayout>
          </listitem>
        </itemizedlist>
      </listitem>
    </itemizedlist>

    <!-- XML::Writer -->
    <bridgehead renderas="sect3" id="perl-xml-writer"
    xreflabel="XML::Writer-&XML-Writer-version;">
    XML::Writer-&XML-Writer-version;</bridgehead>

    <indexterm zone="perl-modules perl-xml-writer">
      <primary sortas="a-XML-Writer">XML::Writer</primary>
    </indexterm>

    <para>XML::Writer provides a <application>Perl</application>
    extension for writing XML documents. This
    module uses the standard <xref linkend="perl-standard-install"/>.</para>

    &lfs81_checked;

    <itemizedlist>
      <listitem>
        <para>
          <ulink url="&XML-Writer-download-http;">XML::Writer-&XML-Writer-version;</ulink>
        </para>
      </listitem>
      <listitem>
<literallayout>&XML-Writer-download-http;
MD5 sum: &XML-Writer-md5sum;</literallayout>
      </listitem>
    </itemizedlist>

  </sect2>

  <sect2 role="installation" id="perl-standard-install"
  xreflabel="build and installation instructions">
    <title>Standard Installation of Perl Modules</title>

    <para>Install <application>Perl</application> modules by running the
    following commands:</para>

    <para>For <xref linkend="perl-data-uniqid"/>, first apply the required
    patch with:</para>

<screen><userinput>patch -Np1 -i ../Data-Uniqid-&Data-Uniqid-version;-disable_failing_test-1.patch</userinput></screen>

    <para>Then, or for all other modules using the standard installation, proceed
    with:</para>

<screen><userinput>perl Makefile.PL &amp;&amp;
make &amp;&amp;
make test</userinput></screen>

    <note>
      <para>If the module is described as using the <emphasis>unsafe</emphasis>
      variant of the Standard Installation, and you are using
      <application>perl-5.26.0</application> or later, (the use of the current
      directory in <literal>@INC</literal> was removed for security reasons)
      you should change the perl invocation to:</para>

<screen><userinput>PERL_USE_UNSAFE_INC=1 &amp;&amp;</userinput></screen>

      <para>If, however, you are using the Auto Installation described below,
      that environment variable will be set whenever the <command>cpan</command>
      shell <command>install</command> is used.</para>
    </note>

    <para>Now, as the <systemitem class="username">root</systemitem> user:</para>

<screen role="root"><userinput>make install</userinput></screen>

    <note>
      <para>When reinstalling a <application>Perl</application> module,
      sometimes older versions of the module being reinstalled are in other
      directories specified in <parameter>@INC</parameter>.  To delete all
      other versions of the module being reinstalled (not simply older ones)
      set the <varname>UNINST</varname> variable:</para>

<screen><userinput>make install UNINST=1</userinput></screen>
    </note>

  </sect2>

  <sect2 role="installation" id="perl-build-install"
  xreflabel="instructions for packages using Build.PL">
    <title>Installation of Perl Modules which use Build.PL</title>

    <para>Install <application>Perl</application> modules which use
    Build.PL by running the following commands:</para>

<screen><userinput>perl Build.PL &amp;&amp;
./Build &amp;&amp;
./Build test</userinput></screen>

    <para>Now, as the <systemitem class="username">root</systemitem> user:</para>

<screen role="root"><userinput>./Build install</userinput></screen>

<!-- following not tested
    <note>
      <para>When reinstalling a <application>Perl</application> module,
      sometimes older versions of the module being reinstalled are in other
      directories specified in <parameter>@INC</parameter>.  To delete all
      other versions of the module being reinstalled (not simply older ones)
      set the <varname>UNINST</varname> variable:</para>

<screen><userinput>./Build install UNINST=1</userinput></screen>
    </note> -->

  </sect2>

  <sect2 role="installation" id="perl-auto-install"
  xreflabel="alternate auto installation instructions">
    <title>(Alternate) Auto Installation of Perl Modules.</title>

    <para>There is an alternate way of installing the modules using the
    <command>cpan</command> shell <command>install</command> command. The
    command automatically downloads the source from the CPAN archive, extracts
    it, runs the compilation, testing and installation commands mentioned
    above, and removes the build source tree. You may still need to install
    dependent library packages before running the automated installation
    method.</para>

    <para>The first time you run <command>cpan</command>, you'll be prompted
    to enter some information regarding download locations and methods. This
    information is retained in files located in
    <filename class='directory'>~/.cpan</filename>. Start the
    <command>cpan</command> shell by issuing '<command>cpan</command>' as the
    <systemitem class="username">root</systemitem> user. Any module may now be
    installed from the
    <emphasis role='underlined'><prompt>cpan&gt;&nbsp;</prompt></emphasis>
    prompt with the command:</para>

<screen role="root"><userinput>install <replaceable>&lt;Module::Name&gt;</replaceable></userinput></screen>

    <para>For additional commands and help, issue '<command>help</command>'
    from the
    <emphasis role='underlined'><prompt>cpan&gt;&nbsp;</prompt></emphasis>
    prompt.</para>

    <para>Alternatively, for scripted or non-interactive installations, use the
    following syntax as the
    <systemitem class="username">root</systemitem> user to install one or more
    modules:</para>

<screen role="root"><userinput>cpan -i <replaceable>&lt;Module1::Name&gt; &lt;Module2::Name&gt;</replaceable></userinput></screen>

    <para>Review the <filename>cpan.1</filename> man page for additional
    parameters you can pass to <command>cpan</command> on the command
    line.</para>

  </sect2>

  <sect2 role="content">
    <title>Contents</title>

    <para>
      Most of these modules only install into the perl directories, but a
      few will also install programs (mostly, perl scripts), or even a library,
      into <filename class="directory">/usr</filename>
    </para>

    <segmentedlist>
      <segtitle>Installed Programs</segtitle>
      <segtitle>Installed Libraries</segtitle>

      <seglistitem>
        <seg> <!-- Use emphasis to highlight the relevant module name.
                   Our setup actually uses italic to do this this. -->
          <emphasis>Archive::Zip:</emphasis> crc32
          <emphasis>File::Find::Rule:</emphasis> findrule
          <emphasis>libwww-perl:</emphasis> lwp-download, lwp-dump, lwp-mirror, lwp-request
          <emphasis>Lingua::Translit:</emphasis> translit
          <emphasis>Log::Log4perl:</emphasis> l4p-tmpl
          <emphasis>Module::Build</emphasis> config_data
          <emphasis>Mojolicious</emphasis> hypnotoad, mojo, morbo
      <!--<emphasis>Test::Pod::Coverage:</emphasis> pod_cover-->
          <emphasis>Text::BibTeX:</emphasis> biblex, bibparse, dumpnames
        </seg>
        <seg>
          <emphasis>Text::BibTeX:</emphasis> libbtparse.so
        </seg>
      </seglistitem>
    </segmentedlist>

    <variablelist>
      <bridgehead renderas="sect3">Short Descriptions</bridgehead>
      <?dbfo list-presentation="list"?>
      <?dbhtml list-presentation="table"?>

      <varlistentry id="crc32">
        <term><command>crc32</command></term>
        <listitem>
          <para>computes and prints to stdout the CRC-32 values of the
          given files.</para>
          <indexterm zone="perl-modules crc32">
            <primary sortas="b-crc32">crc32</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="findrule">
        <term><command>findrule</command></term>
        <listitem>
          <para>is a command line wrapper to File:Find:Rule.</para>
          <indexterm zone="perl-modules findrule">
            <primary sortas="b-findrule">findrule</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="lwp-download">
        <term><command>lwp-download</command></term>
        <listitem>
          <para>is a script to fetch a large file from the web.</para>
          <indexterm zone="perl-modules lwp-download">
            <primary sortas="b-lwp-download">lwp-download</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="lwp-dump">
        <term><command>lwp-dump</command></term>
        <listitem>
          <para>is used to see what headers and content is returned for a URL.</para>
          <indexterm zone="perl-modules lwp-dump">
            <primary sortas="b-lwp-dump">lwp-dump</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="lwp-mirror">
        <term><command>lwp-mirror</command></term>
        <listitem>
          <para>is a simple mirror utility.</para>
          <indexterm zone="perl-modules lwp-mirror">
            <primary sortas="b-lwp-mirror">lwp-mirror</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="lwp-request">
        <term><command>lwp-request</command></term>
        <listitem>
          <para>is a simple command line user agent.</para>
          <indexterm zone="perl-modules lwp-request">
            <primary sortas="b-lwp-request">lwp-request</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="translit">
        <term><command>translit</command></term>
        <listitem>
          <para>transliterates text between writing systems using
          various standards.</para>
          <indexterm zone="perl-modules translit">
            <primary sortas="b-translit">translit</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="l4p-templ">
        <term><command>l4p-templ</command></term>
        <listitem>
          <para>prints out the text of a template Log4perl configuration for
          starting a new Log4perl configuration file.</para>
          <indexterm zone="perl-modules l4p-templ">
            <primary sortas="b-l4p-templ">l4p-templ</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="config_data">
        <term><command>config_data</command></term>
        <listitem>
          <para>is used to query or change the configuration of perl modules.
          </para>
          <indexterm zone="perl-modules config_data">
            <primary sortas="b-config_data">config_data</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="hypnotoad">
        <term><command>hypnotoad</command></term>
        <listitem>
          <para>is an HTTP and WebSocket server.</para>
          <indexterm zone="perl-modules hypnotoad">
            <primary sortas="b-hypnotoad">hypnotoad</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="mojo">
        <term><command>mojo</command></term>
        <listitem>
          <para>is used to list and run Mojolicious commands.</para>
          <indexterm zone="perl-modules mojo">
            <primary sortas="b-mojo">mojo</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="morbo">
        <term><command>morbo</command></term>
        <listitem>
          <para>is an HTTP and WebSocket development server.</para>
          <indexterm zone="perl-modules morbo">
            <primary sortas="b-morbo">morbo</primary>
          </indexterm>
        </listitem>
      </varlistentry>

  <!--<varlistentry id="pod_cover">
        <term><command>pod_cover</command></term>
        <listitem>
          <para>is used to get a coverage analysis of the embedded documentation
          in a perl module.</para>
          <indexterm zone="perl-modules pod_cover">
            <primary sortas="b-pod_cover">pod_cover</primary>
          </indexterm>
        </listitem>
      </varlistentry>-->

      <varlistentry id="biblex">
        <term><command>biblex</command></term>
        <listitem>
          <para>performs lexical analysis on a BibTeX file.</para>
          <indexterm zone="perl-modules biblex">
            <primary sortas="b-biblex">biblex</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="bibparse">
        <term><command>bibparse</command></term>
        <listitem>
          <para>parses a series of BibTeX files with command line options to
          control the string post-processing behaviour.</para>
          <indexterm zone="perl-modules bibparse">
            <primary sortas="b-bibparse">bibparse</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="dumpnames">
        <term><command>dumpnames</command></term>
        <listitem>
          <para>parses a BibTeX file, splitting 'author' and 'editor' fields
          into lists of names, and then dumps everything to stdout.</para>
          <indexterm zone="perl-modules dumpnames">
            <primary sortas="b-dumpnames">dumpnames</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libbtparse">
        <term><filename class='libraryfile'>libbtparse.so</filename></term>
        <listitem>
          <para>is a library for parsing and processing BibTeX data files.</para>
          <indexterm zone="perl-modules libbtparse">
            <primary sortas="c-libbtparse">libbtparse.so</primary>
          </indexterm>
        </listitem>
      </varlistentry>

    </variablelist>
  </sect2>

</sect1>
