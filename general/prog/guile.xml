<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
   "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
  <!ENTITY % general-entities SYSTEM "../../general.ent">
  %general-entities;

  <!ENTITY guile-download-http "http://ftp.gnu.org/pub/gnu/guile/guile-&guile-version;.tar.xz">
  <!ENTITY guile-download-ftp  "ftp://ftp.gnu.org/pub/gnu/guile/guile-&guile-version;.tar.xz">
  <!ENTITY guile-md5sum        "30ff9e94663a2e2098b52f8ce9d050b9">
  <!ENTITY guile-size          "4.2 MB">
  <!ENTITY guile-buildsize     "90 MB">
  <!ENTITY guile-time          "8.0 SBU">
]>

<sect1 id="guile" xreflabel="Guile-&guile-version;">
<?dbhtml filename="guile.html"?>

  <sect1info>
    <othername>$LastChangedBy$</othername>
    <date>$Date$</date>
  </sect1info>

  <title>Guile-&guile-version;</title>

  <indexterm zone="guile">
    <primary sortas="a-Guile">Guile</primary>
  </indexterm>

  <sect2 role="package">
    <title>Introduction to Guile</title>

    <para>
      The <application>Guile</application> package contains the Project
      GNU's extension language library. <application>Guile</application> also
      contains a stand alone <application>Scheme</application> interpreter.
    </para>

    &lfs72_checked;

    <bridgehead renderas="sect3">Package Information</bridgehead>
    <itemizedlist spacing="compact">
      <listitem>
        <para>
          Download (HTTP): <ulink url="&guile-download-http;"/>
        </para>
      </listitem>
      <listitem>
        <para>
          Download (FTP): <ulink url="&guile-download-ftp;"/>
        </para>
      </listitem>
      <listitem>
        <para>
          Download MD5 sum: &guile-md5sum;
        </para>
      </listitem>
      <listitem>
        <para>
          Download size: &guile-size;
        </para>
      </listitem>
      <listitem>
        <para>
          Estimated disk space required: &guile-buildsize;
        </para>
      </listitem>
      <listitem>
        <para>
          Estimated build time: &guile-time;
        </para>
      </listitem>
    </itemizedlist>

    <bridgehead renderas="sect3">Guile Dependencies</bridgehead>

    <bridgehead renderas="sect4">Required</bridgehead>
    <para role="required">
      <xref linkend="pkgconfig"/>,
      <xref linkend="gc"/>,
      <xref linkend="libffi"/>, and 
      <xref linkend="libunistring"/>
    </para>

    <bridgehead renderas="sect4">Optional</bridgehead>
    <para role="optional">
      <xref linkend="emacs"/>  
    </para>

    <para condition="html" role="usernotes">
      User Notes: <ulink url="&blfs-wiki;/guile"/>
    </para>
  </sect2>

  <sect2 role="installation">
    <title>Installation of Guile</title>

    <para>
      Install <application>Guile</application> by running the following
      commands:
    </para>

<screen><userinput>./configure --prefix=/usr --disable-static &amp;&amp;
make      &amp;&amp;
make html &amp;&amp;

makeinfo --plaintext -o doc/r5rs/r5rs.txt doc/r5rs/r5rs.texi &amp;&amp;
makeinfo --plaintext -o doc/ref/guile.txt doc/ref/guile.texi</userinput></screen>

    <para>
      If you have <xref linkend="texlive"/> installed and wish to build alternate
      formats (PDF and postscript) of the documentation, issue the following
      commands:
    </para>

<screen><userinput>for DIRNAME in r5rs ref 
do make -k -C doc/${DIRNAME} pdf ps 
done &amp;&amp;
unset DIRNAME</userinput></screen>

    <para>
      To test the results, issue: <command>make check</command>.
    </para>

    <para>
      Now, as the <systemitem class="username">root</systemitem> user:
    </para>

<screen role="root"><userinput>make install &amp;&amp;

find examples -name "Makefile*" -exec rm {} \; &amp;&amp;
install -v -m755 -d /usr/share/doc/guile-&guile-version; &amp;&amp;
cp -vR examples   /usr/share/doc/guile-&guile-version; &amp;&amp;

for DIRNAME in r5rs ref
do
  install -v -m755 -d /usr/share/doc/guile-&guile-version;/${DIRNAME} &amp;&amp;
  install -v -m644    doc/${DIRNAME}/*.txt \
                      /usr/share/doc/guile-&guile-version;/${DIRNAME} &amp;&amp;
  if [ -d             doc/${DIRNAME}/${DIRNAME}.html ]; then
    cp -v -R          doc/${DIRNAME}/${DIRNAME}.html \
                      /usr/share/doc/guile-&guile-version;/${DIRNAME}
  fi
done &amp;&amp;

cp -v -R doc/ref/guile.html /usr/share/doc/guile-&guile-version;/ref</userinput></screen>

    <para>
      If you built the alternate formats of the documentation, install them
      using the following commands issued by the
      <systemitem class="username">root</systemitem> user:
    </para>

<screen role="root"><userinput>for DIRNAME in r5rs ref 
do
  install -v -m644 doc/${DIRNAME}/*.{pdf,ps,dvi} \
                   /usr/share/doc/guile-&guile-version;/${DIRNAME}
done</userinput></screen>
  </sect2>

  <sect2 role="content">
    <title>Contents</title>

    <segmentedlist>
      <segtitle>Installed Programs</segtitle>
      <segtitle>Installed Libraries</segtitle>
      <segtitle>Installed Directories</segtitle>

      <seglistitem>
        <seg>
          guild, guile, guile-config, guile-snarf and guile-tools
        </seg>
        <seg>
          libguile-2.0.so and libguilereadline-v-18.so
        </seg>
        <seg>
          /usr/include/guile,
          /usr/lib/guile,
          /usr/share/doc/guile-&guile-version; and
          /usr/share/guile
        </seg>
      </seglistitem>
    </segmentedlist>

    <variablelist>
      <bridgehead renderas="sect3">Short Descriptions</bridgehead>
      <?dbfo list-presentation="list"?>
      <?dbhtml list-presentation="table"?>

      <varlistentry id="guile-prog">
        <term><command>guile</command></term>
        <listitem>
          <para>
            is a stand-alone Scheme interpreter for
            <application>Guile</application>.
          </para>
          <indexterm zone="guile guile-prog">
            <primary sortas="b-guile">guile</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="guile-config">
        <term><command>guile-config</command></term>
        <listitem>
          <para>
            is a <application>Guile</application> script which provides the
            information necessary to link your programs against the
            <application>Guile</application> library, in much the same way
            PkgConfig does.
          </para>
          <indexterm zone="guile guile-config">
            <primary sortas="b-guile-config">guile-config</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="guile-snarf">
        <term><command>guile-snarf</command></term>
        <listitem>
          <para>
            is a script to parse declarations in your
            <application>C</application> code for
            <application>Scheme</application> visible
            <application>C</application> functions.
          </para>
          <indexterm zone="guile guile-snarf">
            <primary sortas="b-guile-snarf">guile-snarf</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="guild">
        <term><command>guild</command></term>
        <listitem>
          <para>
            is a wrapper program installed along with <command>guile</command>,
            which knows where a particular module is installed and calls it,
            passing its arguments to the program.
          </para>
          <indexterm zone="guile guild">
            <primary sortas="b-guild">guild</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="guile-tools">
        <term><command>guile-tools</command></term>
        <listitem>
          <para>
            is a symlink to <command>guild</command>.
          </para>
          <indexterm zone="guile guile-tools">
            <primary sortas="b-guile-tools">guile-tools</primary>
          </indexterm>
        </listitem>
      </varlistentry>

    </variablelist>

  </sect2>

</sect1>
