<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
   "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
  <!ENTITY % general-entities SYSTEM "../../general.ent">
  %general-entities;

  <!ENTITY libmcs-download-http "http://distfiles.atheme.org/libmcs-&libmcs-version;.tgz">
  <!ENTITY libmcs-download-ftp  " ">
  <!ENTITY libmcs-md5sum        "1611a7bd7e7b07df3d889012d133c440">
  <!ENTITY libmcs-size          "105 KB">
  <!ENTITY libmcs-buildsize     "1.7 MB">
  <!ENTITY libmcs-time          "less than 0.1 SBU">
]>

<sect1 id="libmcs" xreflabel="libmcs-&libmcs-version;">
  <?dbhtml filename="mcs.html"?>

  <sect1info>
    <othername>$LastChangedBy$</othername>
    <date>$Date$</date>
  </sect1info>

  <title>libmcs-&libmcs-version;</title>

  <indexterm zone="libmcs">
    <primary sortas="a-libmcs">mcs</primary>
  </indexterm>

  <sect2 role="package">
    <title>Introduction to libmcs</title>

    <para>The <application>libmcs</application> package is a library and set of
    tools which abstract the storage of configuration settings away from
    userland applications. There are similar projects like this (such as
    <application>GConf</application>), but unlike those projects,
    <application>libmcs</application> strictly handles abstraction. It does not
    impose any specific data storage requirement, nor is it tied to any
    desktop environment or software suite.</para>

    <bridgehead renderas="sect3">Package Information</bridgehead>
    <itemizedlist spacing="compact">
      <listitem>
        <para>Download (HTTP): <ulink url="&libmcs-download-http;"/></para>
      </listitem>
      <listitem>
        <para>Download (FTP): <ulink url="&libmcs-download-ftp;"/></para>
      </listitem>
      <listitem>
        <para>Download MD5 sum: &libmcs-md5sum;</para>
      </listitem>
      <listitem>
        <para>Download size: &libmcs-size;</para>
      </listitem>
      <listitem>
        <para>Estimated disk space required: &libmcs-buildsize;</para>
      </listitem>
      <listitem>
        <para>Estimated build time: &libmcs-time;</para>
      </listitem>
    </itemizedlist>

    <bridgehead renderas="sect3">libmcs Dependencies</bridgehead>

    <bridgehead renderas="sect4">Required</bridgehead>
    <para role="required"><xref linkend="libmowgli"/></para>

    <bridgehead renderas="sect4">Optional</bridgehead>
    <para role="optional"><xref linkend="GConf"/> and
    <xref linkend="kdelibs"/></para>

    <para condition="html" role="usernotes">User Notes:
    <ulink url="&blfs-wiki;/mcs"/></para>

  </sect2>

  <sect2 role="installation">
    <title>Installation of libmcs</title>

    <para>Install <application>libmcs</application> by
    running the following commands:</para>

<screen><userinput>./configure --prefix=/usr &amp;&amp;
make</userinput></screen>

    <para>This package does not come with a test suite.</para>

    <para>Now, as the <systemitem class="username">root</systemitem> user:</para>

<screen role="root"><userinput>make install &amp;&amp;
install -v -m644 -D README /usr/share/doc/libmcs-&libmcs-version;/README</userinput></screen>

  </sect2>

  <sect2 role="commands">
    <title>Command Explanations</title>

    <para><option>--with-qt-path=/usr/share/qt</option>: If you have
    <xref linkend="kdelibs"/> installed, you must pass
    additional parameters to the <command>configure</command> script to
    identify the location of Qt and, possibly, KDE libraries and interface
    headers.</para>

    <para><option>--disable-kconfig</option>: If <filename>configure</filename>
    finds <filename class="libraryfile">libkdecore</filename> from
    <application>kdelibs</application>, it does not test to check it is indeed
    the <application>kde3</application> version and will try to use it (and
    fail). This switch will prevent that.</para>

    <para>For additional information about the various storage backends
    (including the default XDG-compliant backend), see the
    <filename>README</filename> file in the source tree.</para>

  </sect2>

  <sect2 role="configuration">
    <title>Configuring libmcs</title>

    <para>There are various ways to configure <application>libmcs</application>
    to use a specific backend on a site-wide or individual user basis. If the
    default file-based storage backend is suitable, no configuration steps are
    required. See section 2 of the <filename>README</filename> file in the
    source tree for details.</para>

  </sect2>

  <sect2 role="content">
    <title>Contents</title>

    <segmentedlist>
      <segtitle>Installed Programs</segtitle>
      <segtitle>Installed Libraries</segtitle>
      <segtitle>Installed Directories</segtitle>

      <seglistitem>
        <seg>mcs-getconfval, mcs-info, mcs-query-backends and
        mcs-setconfval</seg>
        <seg>libmcs.so and backend storage modules</seg>
        <seg>/usr/include/libmcs, /usr/lib/mcs and
        /usr/share/doc/libmcs-&libmcs-version;</seg>
      </seglistitem>
    </segmentedlist>

    <variablelist>
      <bridgehead renderas="sect3">Short Descriptions</bridgehead>
      <?dbfo list-presentation="list"?>
      <?dbhtml list-presentation="table"?>

      <varlistentry id="mcs-getconfval">
        <term><command>mcs-getconfval</command></term>
        <listitem>
          <para>queries <application>libmcs</application> for a configuration
          value.</para>
          <indexterm zone="libmcs mcs-getconfval">
            <primary sortas="b-mcs-getconfval">mcs-getconfval</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="mcs-info">
        <term><command>mcs-info</command></term>
        <listitem>
          <para>displays information about the current installation and
          configuration of <application>libmcs</application>.</para>
          <indexterm zone="libmcs mcs-info">
            <primary sortas="b-mcs-info">mcs-info</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="mcs-query-backends">
        <term><command>mcs-query-backends</command></term>
        <listitem>
          <para>queries <application>libmcs</application> to determine what
          backends are available.</para>
          <indexterm zone="libmcs mcs-query-backends">
            <primary sortas="b-mcs-query-backends">mcs-query-backends</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="mcs-setconfval">
        <term><command>mcs-setconfval</command></term>
        <listitem>
          <para>instructs <application>libmcs</application> to change a
          configuration value.</para>
          <indexterm zone="libmcs mcs-setconfval">
            <primary sortas="b-mcs-setconfval">mcs-setconfval</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libmcs.so">
        <term><filename class='libraryfile'>libmcs.so</filename></term>
        <listitem>
          <para>contains the API functions required by the
          <application>libmcs</application> userspace tools.</para>
          <indexterm zone="libmcs libmcs.so">
            <primary sortas="c-libmcs.so">libmcs.so</primary>
          </indexterm>
        </listitem>
      </varlistentry>
    </variablelist>

  </sect2>

</sect1>
