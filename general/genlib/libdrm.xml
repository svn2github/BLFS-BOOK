<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
   "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
  <!ENTITY % general-entities SYSTEM "../../general.ent">
  %general-entities;

  <!ENTITY libdrm-download-http "http://dri.freedesktop.org/libdrm/libdrm-&libdrm-version;.tar.bz2">
  <!ENTITY libdrm-download-ftp  " ">
  <!ENTITY libdrm-md5sum        "eb2a76720af5051b1687328a2240daed">
  <!ENTITY libdrm-size          "444 KB">
  <!ENTITY libdrm-buildsize     "10 MB">
  <!ENTITY libdrm-time          "0.2 SBU">
]>

<sect1 id="libdrm" xreflabel="libdrm-&libdrm-version;">
  <?dbhtml filename="libdrm.html"?>

  <sect1info>
    <othername>$LastChangedBy$</othername>
    <date>$Date$</date>
  </sect1info>

  <title>libdrm-&libdrm-version;</title>

  <indexterm zone="libdrm">
    <primary sortas="a-libdrm">libdrm</primary>
  </indexterm>

  <sect2 role="package">
    <title>Introduction to libdrm</title>

    <para>
      <application>libdrm</application> provides core library routines
      for the X Window System to directly interface with video hardware using
      the Linux kernel's Direct Rendering Manager (DRM).
    </para>

    &lfs71_checked;

    <bridgehead renderas="sect3">Package Information</bridgehead>
    <itemizedlist spacing="compact">
      <listitem>
        <para>
          Download (HTTP): <ulink url="&libdrm-download-http;"/>
        </para>
      </listitem>
      <listitem>
        <para>
          Download (FTP): <ulink url="&libdrm-download-ftp;"/>
        </para>
      </listitem>
      <listitem>
        <para>
          Download MD5 sum: &libdrm-md5sum;
        </para>
      </listitem>
      <listitem>
        <para>
          Download size: &libdrm-size;
        </para>
      </listitem>
      <listitem>
        <para>
          Estimated disk space required: &libdrm-buildsize;
        </para>
      </listitem>
      <listitem>
        <para>
          Estimated build time: &libdrm-time;
        </para>
      </listitem>
    </itemizedlist>

    <bridgehead renderas="sect3">libdrm Dependencies</bridgehead>

    <bridgehead renderas="sect4">Required</bridgehead>
    <para role="required">
      <xref linkend="xorg7-lib"/>
    </para>

    <bridgehead renderas="sect4">Optional</bridgehead>
    <para role="optional">
      <ulink url="http://www.valgrind.org/">Valgrind</ulink>
    </para>

    <para condition="html" role="usernotes">User Notes:
      <ulink url="&blfs-wiki;/libdrm"/>
    </para>
  </sect2>

  <sect2 role="installation">
    <title>Installation of libdrm</title>

    <warning>
      <para>
        You may notice that there are several newer version of
        <application>libdrm</application> available upstream.
        However, we do not recommend using any later version than
        this one if you are going to build
        <xref linkend="mesalib"/> using BLFS instructions.
      </para>
    </warning>

    <para>
      Install <application>libdrm</application> by running the following
      commands:
    </para>

<screen><userinput>./configure --prefix=$XORG_PREFIX            \
            --enable-udev                    \
            --enable-vmwgfx-experimental-api \
            --enable-nouveau-experimental-api &amp;&amp;
make</userinput></screen>

    <para>
      To check the results, issue <command>make check</command>. Note that
      some tests may fail depending on the video hardware installed in the
      machine.
    </para>

    <para>
      Now, as the <systemitem class="username">root</systemitem> user:
    </para>

<screen role="root"><userinput>make install</userinput></screen>

  </sect2>

  <sect2 role="commands">
    <title>Command Explanations</title>

    <para>
      <option>--enable-nouveau-experimental-api</option>: This parameter
      enables building of Nouveau (Open Source NVidia drivers) DRM interface
      library as well as corresponding headers.
    </para>

    <para>
      <option>--enable-vmwgfx-experimental-api</option>: This parameter
      enables use of vmwgfx experimental kernel API used by the
      VMware 3D Gallium driver.
    </para>

    <para>
      <option>--enable-omap-experimental-api</option>: This option
      enables use of OMAP's experimental kernel API. OMAP is a series of
      system-on-chips (SoCs) developed by Texas Instruments.
    </para>

  </sect2>

  <sect2 role="content">
    <title>Contents</title>

    <segmentedlist>
      <segtitle>Installed Libraries</segtitle>
      <segtitle>Installed Directories</segtitle>

      <seglistitem>
        <seg>
          libdrm.so, libdrm_intel.so, libdrm_nouveau.so, libdrm_omap.so
          libdrm_radeon.so and libkms.so
        </seg>
        <seg>
          <envar>$XORG_PREFIX</envar>/include/{libdrm,libkms,nouveau,omap}
        </seg>
      </seglistitem>
    </segmentedlist>

    <variablelist>
      <bridgehead renderas="sect3">Short Descriptions</bridgehead>
      <?dbfo list-presentation="list"?>
      <?dbhtml list-presentation="table"?>

      <varlistentry id="libdrm-lib">
        <term><filename class='libraryfile'>libdrm{,_intel,_nouveau,_omap,_radeon}.so</filename></term>
        <listitem>
          <para>
            contains the Direct Rendering Manager library functions, and
            additional vendor specific functions for Intel, nVidia, Omap
            and Radeon devices.
          </para>
          <indexterm zone="libdrm libdrm-lib">
            <primary sortas="c-libdrm">libdrm{,_intel,_nouveau,_omap,_radeon}.so</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="libkms-lib">
        <term><filename class='libraryfile'>libkms.so</filename></term>
        <listitem>
          <para>
            contains functions necessary for kernel modesetting.
          </para>
          <indexterm zone="libdrm libkms-lib">
            <primary sortas="c-libkms">libkms.so</primary>
          </indexterm>
        </listitem>
      </varlistentry>

    </variablelist>

  </sect2>

</sect1>
